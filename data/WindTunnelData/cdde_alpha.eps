%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox:  0 0 300 212
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-Bold-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold-Oblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
[0.5 10 div 0 0 0.5 10 div neg  0 2120 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
33 Setcolor
 (drawpoly) 14 [ -34]
[5250 1521 3397 530 750 1224 750 2719 2603 3710 5250 3016 5250 1521 
] dogrey 
33 Setcolor
/absolu true def
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
 (drawsegs) 12 [ 3]
[3397 2024 750 2719 3397 2024 5250 3016 3397 2024 3397 530 
] dogrey 
[] 0 setdash
32 Setcolor
5 Thickness
[] 0 setdash
[] 0 setdash
32 Setcolor
/closeflag false def
 (drawpoly) 14 [ 0]
[5250 1521 3397 530 750 1224 750 2719 2603 3710 5250 3016 5250 1521 
] dogrey 
32 Setcolor
/absolu true def
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(CDDe versus AoA ) 2579 292 0  0.00 [2579 192 839 99] Show
%Latex:\myput{2579}{3948}{5}{CDDe versus AoA }
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.020) 309 2672 0  0.00 [309 2572 283 99] Show
%Latex:\myput{309}{1568}{5}{-0.020}
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2719 671 2677 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2719 710 2698 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2625 710 2604 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.015) 309 2485 0  0.00 [309 2385 283 99] Show
%Latex:\myput{309}{1755}{5}{-0.015}
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2532 671 2490 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2532 710 2511 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2438 710 2417 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.010) 309 2298 0  0.00 [309 2198 283 99] Show
%Latex:\myput{309}{1942}{5}{-0.010}
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2345 671 2303 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2345 710 2324 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2252 710 2231 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.005) 309 2111 0  0.00 [309 2011 283 99] Show
%Latex:\myput{309}{2129}{5}{-0.005}
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2158 671 2116 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2158 710 2137 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2065 710 2044 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.000) 342 1924 0  0.00 [342 1824 250 99] Show
%Latex:\myput{342}{2316}{5}{0.000}
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1971 671 1929 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1971 710 1950 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1878 710 1857 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.005) 342 1738 0  0.00 [342 1638 250 99] Show
%Latex:\myput{342}{2502}{5}{0.005}
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1785 671 1743 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1785 710 1764 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1691 710 1670 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.010) 342 1551 0  0.00 [342 1451 250 99] Show
%Latex:\myput{342}{2689}{5}{0.010}
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1598 671 1556 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1598 710 1577 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1504 710 1483 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.015) 342 1364 0  0.00 [342 1264 250 99] Show
%Latex:\myput{342}{2876}{5}{0.015}
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1411 671 1369 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1411 710 1390 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1318 710 1297 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.020) 342 1177 0  0.00 [342 1077 250 99] Show
%Latex:\myput{342}{3063}{5}{0.020}
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1224 671 1182 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Z) 300 1980 0 270.00 [300 1880 61 99] Show
%Latex:\myput{300}{2260}{5}{Z}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-20) 2761 3881 0  0.00 [2761 3781 144 99] Show
%Latex:\myput{2761}{359}{5}{-20}
32 Setcolor
 (drawsegs) 4 [ 32]
[2603 3710 2682 3752 
] dogrey 
 (drawsegs) 4 [ 32]
[2750 3671 2789 3692 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-15) 3055 3804 0  0.00 [3055 3704 144 99] Show
%Latex:\myput{3055}{436}{5}{-15}
32 Setcolor
 (drawsegs) 4 [ 32]
[2897 3633 2976 3675 
] dogrey 
 (drawsegs) 4 [ 32]
[3044 3594 3083 3615 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-10) 3349 3727 0  0.00 [3349 3627 144 99] Show
%Latex:\myput{3349}{513}{5}{-10}
32 Setcolor
 (drawsegs) 4 [ 32]
[3191 3556 3270 3598 
] dogrey 
 (drawsegs) 4 [ 32]
[3338 3517 3377 3538 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-5) 3644 3650 0  0.00 [3644 3550 88 99] Show
%Latex:\myput{3644}{590}{5}{-5}
32 Setcolor
 (drawsegs) 4 [ 32]
[3486 3479 3565 3521 
] dogrey 
 (drawsegs) 4 [ 32]
[3633 3440 3672 3461 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0) 3938 3572 0  0.00 [3938 3472 55 99] Show
%Latex:\myput{3938}{668}{5}{0}
32 Setcolor
 (drawsegs) 4 [ 32]
[3780 3401 3859 3443 
] dogrey 
 (drawsegs) 4 [ 32]
[3927 3363 3966 3384 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(5) 4232 3495 0  0.00 [4232 3395 55 99] Show
%Latex:\myput{4232}{745}{5}{5}
32 Setcolor
 (drawsegs) 4 [ 32]
[4074 3324 4153 3366 
] dogrey 
 (drawsegs) 4 [ 32]
[4221 3286 4260 3307 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(10) 4526 3418 0  0.00 [4526 3318 111 99] Show
%Latex:\myput{4526}{822}{5}{10}
32 Setcolor
 (drawsegs) 4 [ 32]
[4368 3247 4447 3289 
] dogrey 
 (drawsegs) 4 [ 32]
[4515 3209 4554 3230 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(15) 4820 3341 0  0.00 [4820 3241 111 99] Show
%Latex:\myput{4820}{899}{5}{15}
32 Setcolor
 (drawsegs) 4 [ 32]
[4662 3170 4741 3212 
] dogrey 
 (drawsegs) 4 [ 32]
[4809 3132 4848 3153 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(20) 5114 3264 0  0.00 [5114 3164 111 99] Show
%Latex:\myput{5114}{976}{5}{20}
32 Setcolor
 (drawsegs) 4 [ 32]
[4956 3093 5035 3135 
] dogrey 
 (drawsegs) 4 [ 32]
[5103 3054 5142 3075 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(25) 5408 3187 0  0.00 [5408 3087 111 99] Show
%Latex:\myput{5408}{1053}{5}{25}
32 Setcolor
 (drawsegs) 4 [ 32]
[5250 3016 5329 3058 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(X) 4481 3786 0  0.00 [4481 3686 66 99] Show
%Latex:\myput{4481}{454}{5}{X}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-25) 2285 3841 0  0.00 [2285 3741 144 99] Show
%Latex:\myput{2285}{399}{5}{-25}
32 Setcolor
 (drawsegs) 4 [ 32]
[2603 3710 2516 3732 
] dogrey 
 (drawsegs) 4 [ 32]
[2603 3710 2559 3721 
] dogrey 
 (drawsegs) 4 [ 32]
[2449 3627 2405 3638 
] dogrey 
 (drawsegs) 4 [ 32]
[2294 3545 2250 3556 
] dogrey 
 (drawsegs) 4 [ 32]
[2140 3462 2096 3473 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-10) 1668 3511 0  0.00 [1668 3411 144 99] Show
%Latex:\myput{1668}{729}{5}{-10}
32 Setcolor
 (drawsegs) 4 [ 32]
[1986 3380 1899 3402 
] dogrey 
 (drawsegs) 4 [ 32]
[1986 3380 1942 3391 
] dogrey 
 (drawsegs) 4 [ 32]
[1831 3297 1787 3308 
] dogrey 
 (drawsegs) 4 [ 32]
[1677 3214 1633 3225 
] dogrey 
 (drawsegs) 4 [ 32]
[1522 3132 1478 3143 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(5) 1139 3180 0  0.00 [1139 3080 55 99] Show
%Latex:\myput{1139}{1060}{5}{5}
32 Setcolor
 (drawsegs) 4 [ 32]
[1368 3049 1281 3071 
] dogrey 
 (drawsegs) 4 [ 32]
[1368 3049 1324 3060 
] dogrey 
 (drawsegs) 4 [ 32]
[1213 2966 1169 2977 
] dogrey 
 (drawsegs) 4 [ 32]
[1059 2884 1015 2895 
] dogrey 
 (drawsegs) 4 [ 32]
[904 2801 860 2812 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(20) 465 2850 0  0.00 [465 2750 111 99] Show
%Latex:\myput{465}{1390}{5}{20}
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2719 663 2741 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Y) 1320 3687 0  0.00 [1320 3587 66 99] Show
%Latex:\myput{1320}{553}{5}{Y}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
0 Setcolor
[] 0 setdash
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3509 1073 3385 918 3503 826 3626 991 3509 1073 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3450 1122 3326 973 3385 918 3509 1073 3450 1122 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3391 1167 3267 1024 3326 973 3450 1122 3391 1167 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3332 1205 3209 1066 3267 1024 3391 1167 3332 1205 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3632 1237 3509 1073 3626 991 3750 1167 3632 1237 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3273 1240 3150 1105 3209 1066 3332 1205 3273 1240 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3573 1279 3450 1122 3509 1073 3632 1237 3573 1279 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3156 1303 3032 1175 3150 1105 3273 1240 3156 1303 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3514 1317 3391 1167 3450 1122 3573 1279 3514 1317 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3456 1350 3332 1205 3391 1167 3514 1317 3456 1350 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3038 1364 2914 1241 3032 1175 3156 1303 3038 1364 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3397 1380 3273 1240 3332 1205 3456 1350 3397 1380 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3838 1507 3632 1237 3750 1167 3956 1457 3838 1507 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2920 1422 2797 1305 2914 1241 3038 1364 2920 1422 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3279 1437 3156 1303 3273 1240 3397 1380 3279 1437 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3779 1536 3573 1279 3632 1237 3838 1507 3779 1536 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2803 1479 2679 1367 2797 1305 2920 1422 2803 1479 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3162 1491 3038 1364 3156 1303 3279 1437 3162 1491 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3720 1563 3514 1317 3573 1279 3779 1536 3720 1563 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3662 1587 3456 1350 3514 1317 3720 1563 3662 1587 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2744 1506 2620 1396 2679 1367 2803 1479 2744 1506 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3044 1543 2920 1422 3038 1364 3162 1491 3044 1543 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3603 1610 3397 1380 3456 1350 3662 1587 3603 1610 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2685 1533 2562 1425 2620 1396 2744 1506 2685 1533 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3485 1653 3279 1437 3397 1380 3603 1610 3485 1653 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2926 1594 2803 1479 2920 1422 3044 1543 2926 1594 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2450 1636 2326 1537 2562 1425 2685 1533 2450 1636 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4044 1764 3838 1507 3956 1457 4162 1733 4044 1764 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2868 1618 2744 1506 2803 1479 2926 1594 2868 1618 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3368 1696 3162 1491 3279 1437 3485 1653 3368 1696 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3985 1779 3779 1536 3838 1507 4044 1764 3985 1779 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2809 1642 2685 1533 2744 1506 2868 1618 2809 1642 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3926 1795 3720 1563 3779 1536 3985 1779 3926 1795 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3250 1737 3044 1543 3162 1491 3368 1696 3250 1737 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2332 1688 2209 1592 2326 1537 2450 1636 2332 1688 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3868 1810 3662 1587 3720 1563 3926 1795 3868 1810 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2573 1737 2450 1636 2685 1533 2809 1642 2573 1737 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3809 1826 3603 1610 3662 1587 3868 1810 3809 1826 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3132 1778 2926 1594 3044 1543 3250 1737 3132 1778 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2215 1739 2091 1647 2209 1592 2332 1688 2215 1739 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3691 1857 3485 1653 3603 1610 3809 1826 3691 1857 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3073 1798 2868 1618 2926 1594 3132 1778 3073 1798 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2097 1790 1973 1703 2091 1647 2215 1739 2097 1790 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4250 2008 4044 1764 4162 1733 4368 1997 4250 2008 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2456 1783 2332 1688 2450 1636 2573 1737 2456 1783 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3015 1818 2809 1642 2868 1618 3073 1798 3015 1818 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3573 1887 3368 1696 3485 1653 3691 1857 3573 1887 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4191 2010 3985 1779 4044 1764 4250 2008 4191 2010 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[3376 1676 3293 1782 3469 2183 3552 1630 3376 1676 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[1979 1841 1856 1758 1973 1703 2097 1790 1979 1841 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2338 1830 2215 1739 2332 1688 2456 1783 2338 1830 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4132 2014 3926 1795 3985 1779 4191 2010 4132 2014 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2779 1896 2573 1737 2809 1642 3015 1818 2779 1896 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3456 1918 3250 1737 3368 1696 3573 1887 3456 1918 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4073 2021 3868 1810 3926 1795 4132 2014 4073 2021 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[1862 1892 1738 1813 1856 1758 1979 1841 1862 1892 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2221 1877 2097 1790 2215 1739 2338 1830 2221 1877 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4015 2029 3809 1826 3868 1810 4073 2021 4015 2029 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[3293 1782 3537 1912 3714 1816 3469 2183 3293 1782 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 2]
[3456 1819 3376 1676 3552 1630 3632 1773 3456 1819 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 2]
[3199 1972 3117 1878 3293 1782 3376 1676 3199 1972 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3338 1949 3132 1778 3250 1737 3456 1918 3338 1949 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2662 1934 2456 1783 2573 1737 2779 1896 2662 1934 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[1744 1942 1621 1866 1738 1813 1862 1892 1744 1942 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3897 2047 3691 1857 3809 1826 4015 2029 3897 2047 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2103 1923 1979 1841 2097 1790 2221 1877 2103 1923 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3279 1965 3073 1798 3132 1778 3338 1949 3279 1965 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3221 1980 3015 1818 3073 1798 3279 1965 3221 1980 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[3117 1878 3361 2008 3537 1912 3293 1782 3117 1878 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 2]
[3279 1865 3199 1972 3376 1676 3456 1819 3279 1865 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 2]
[3023 1968 2940 1924 3117 1878 3199 1972 3023 1968 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2544 1973 2338 1830 2456 1783 2662 1934 2544 1973 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3779 2066 3573 1887 3691 1857 3897 2047 3779 2066 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[1985 1970 1862 1892 1979 1841 2103 1923 1985 1970 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2426 2012 2221 1877 2338 1830 2544 1973 2426 2012 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2985 2042 2779 1896 3015 1818 3221 1980 2985 2042 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3662 2087 3456 1918 3573 1887 3779 2066 3662 2087 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[1868 2015 1744 1942 1862 1892 1985 1970 1868 2015 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[3537 1912 3619 2005 3795 1959 3714 1816 3537 1912 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[2940 1924 3184 2104 3361 2008 3117 1878 2940 1924 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 2]
[3103 2061 3023 1968 3199 1972 3279 1865 3103 2061 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 2]
[2846 2014 2764 1970 2940 1924 3023 1968 2846 2014 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[1274 2143 1150 2082 1621 1866 1744 1942 1274 2143 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2309 2051 2103 1923 2221 1877 2426 2012 2309 2051 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3544 2107 3338 1949 3456 1918 3662 2087 3544 2107 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2868 2073 2662 1934 2779 1896 2985 2042 2868 2073 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 2]
[3361 2008 3442 2002 3619 2005 3537 1912 3361 2008 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3485 2118 3279 1965 3338 1949 3544 2107 3485 2118 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[2764 1970 3008 2051 3184 2104 2940 1924 2764 1970 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 2]
[2926 2057 2846 2014 3023 1968 3103 2061 2926 2057 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2191 2089 1985 1970 2103 1923 2309 2051 2191 2089 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[2670 1911 2587 2016 2764 1970 2846 2014 2670 1911 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4868 2459 4250 2008 4368 1997 4985 2468 4868 2459 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3426 2129 3221 1980 3279 1965 3485 2118 3426 2129 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2750 2103 2544 1973 2662 1934 2868 2073 2750 2103 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[1397 2199 1274 2143 1744 1942 1868 2015 1397 2199 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2074 2128 1868 2015 1985 1970 2191 2089 2074 2128 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4809 2449 4191 2010 4250 2008 4868 2459 4809 2449 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 2]
[3184 2104 3266 2048 3442 2002 3361 2008 3184 2104 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[2587 2016 2831 2047 3008 2051 2764 1970 2587 2016 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 2]
[2750 2103 2670 1911 2846 2014 2926 2057 2750 2103 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[2493 1958 2411 2112 2587 2016 2670 1911 2493 1958 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4750 2441 4132 2014 4191 2010 4809 2449 4750 2441 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2632 2134 2426 2012 2544 1973 2750 2103 2632 2134 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3191 2175 2985 2042 3221 1980 3426 2129 3191 2175 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4691 2439 4073 2021 4132 2014 4750 2441 4691 2439 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4632 2439 4015 2029 4073 2021 4691 2439 4632 2439 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2515 2165 2309 2051 2426 2012 2632 2134 2515 2165 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 2]
[3008 2051 3089 2045 3266 2048 3184 2104 3008 2051 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 2]
[2411 2112 2655 1796 2831 2047 2587 2016 2411 2112 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 2]
[2574 2150 2493 1958 2670 1911 2750 2103 2574 2150 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[2317 2004 2234 2159 2411 2112 2493 1958 2317 2004 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3074 2198 2868 2073 2985 2042 3191 2175 3074 2198 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4515 2445 3897 2047 4015 2029 4632 2439 4515 2445 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[1603 2281 1397 2199 1868 2015 2074 2128 1603 2281 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2397 2196 2191 2089 2309 2051 2515 2165 2397 2196 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2956 2221 2750 2103 2868 2073 3074 2198 2956 2221 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 2]
[2831 2047 2913 2041 3089 2045 3008 2051 2831 2047 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4397 2453 3779 2066 3897 2047 4515 2445 4397 2453 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 2]
[2234 2159 2478 1843 2655 1796 2411 2112 2234 2159 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 2]
[2397 2146 2317 2004 2493 1958 2574 2150 2397 2146 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[2140 2050 2058 2205 2234 2159 2317 2004 2140 2050 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2279 2227 2074 2128 2191 2089 2397 2196 2279 2227 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2838 2244 2632 2134 2750 2103 2956 2221 2838 2244 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4279 2462 3662 2087 3779 2066 4397 2453 4279 2462 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[2655 1796 2736 2137 2913 2041 2831 2047 2655 1796 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[2058 2205 2302 2634 2478 1843 2234 2159 2058 2205 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 2]
[2221 2193 2140 2050 2317 2004 2397 2146 2221 2193 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[1964 2047 1881 2400 2058 2205 2140 2050 1964 2047 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2721 2267 2515 2165 2632 2134 2838 2244 2721 2267 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4162 2473 3544 2107 3662 2087 4279 2462 4162 2473 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4103 2479 3485 2118 3544 2107 4162 2473 4103 2479 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[1809 2350 1603 2281 2074 2128 2279 2227 1809 2350 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2603 2290 2397 2196 2515 2165 2721 2267 2603 2290 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[2478 1843 2560 2879 2736 2137 2655 1796 2478 1843 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[1881 2400 2126 2729 2302 2634 2058 2205 1881 2400 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 2]
[2044 2289 1964 2047 2140 2050 2221 2193 2044 2289 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[4868 2590 5074 2669 5191 2697 4985 2624 4868 2590 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[5074 2669 4868 2459 4985 2468 5191 2697 5074 2669 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[1788 1647 1705 2446 1881 2400 1964 2047 1788 1647 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4044 2486 3426 2129 3485 2118 4103 2479 4044 2486 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2485 2313 2279 2227 2397 2196 2603 2290 2485 2313 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[4809 2564 5015 2647 5074 2669 4868 2590 4809 2564 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[5015 2647 4809 2449 4868 2459 5074 2669 5015 2647 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[4750 2542 4956 2628 5015 2647 4809 2564 4750 2542 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4956 2628 4750 2441 4809 2449 5015 2647 4956 2628 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[2302 2634 2383 2926 2560 2879 2478 1843 2302 2634 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3809 2515 3191 2175 3426 2129 4044 2486 3809 2515 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[1705 2446 1949 2825 2126 2729 1881 2400 1705 2446 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 2]
[1868 2335 1788 1647 1964 2047 2044 2289 1868 2335 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[4691 2530 4897 2619 4956 2628 4750 2542 4691 2530 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4897 2619 4691 2439 4750 2441 4956 2628 4897 2619 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[4632 2520 4838 2612 4897 2619 4691 2530 4632 2520 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4838 2612 4632 2439 4691 2439 4897 2619 4838 2612 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 2]
[2126 2729 2207 2773 2383 2926 2302 2634 2126 2729 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3691 2530 3074 2198 3191 2175 3809 2515 3691 2530 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[4515 2510 4721 2605 4838 2612 4632 2520 4515 2510 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4721 2605 4515 2445 4632 2439 4838 2612 4721 2605 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2015 2406 1809 2350 2279 2227 2485 2313 2015 2406 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3574 2545 2956 2221 3074 2198 3691 2530 3574 2545 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[4397 2504 4603 2603 4721 2605 4515 2510 4397 2504 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4603 2603 4397 2453 4515 2445 4721 2605 4603 2603 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[1949 2825 2031 2819 2207 2773 2126 2729 1949 2825 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3456 2560 2838 2244 2956 2221 3574 2545 3456 2560 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[4279 2500 4485 2602 4603 2603 4397 2504 4279 2500 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4485 2602 4279 2462 4397 2453 4603 2603 4485 2602 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3338 2575 2721 2267 2838 2244 3456 2560 3338 2575 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[4162 2498 4368 2604 4485 2602 4279 2500 4162 2498 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4368 2604 4162 2473 4279 2462 4485 2602 4368 2604 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[4103 2499 4309 2606 4368 2604 4162 2498 4103 2499 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4309 2606 4103 2479 4162 2473 4368 2604 4309 2606 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3221 2591 2603 2290 2721 2267 3338 2575 3221 2591 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[4044 2500 4250 2609 4309 2606 4103 2499 4044 2500 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4250 2609 4044 2486 4103 2479 4309 2606 4250 2609 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3103 2606 2485 2313 2603 2290 3221 2591 3103 2606 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[3809 2509 4015 2623 4250 2609 4044 2500 3809 2509 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[4015 2623 3809 2515 4044 2486 4250 2609 4015 2623 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3897 2630 3691 2530 3809 2515 4015 2623 3897 2630 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[3691 2514 3897 2630 4015 2623 3809 2509 3691 2514 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2633 2670 2015 2406 2485 2313 3103 2606 2633 2670 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3780 2638 3574 2545 3691 2530 3897 2630 3780 2638 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[3574 2520 3780 2638 3897 2630 3691 2514 3574 2520 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3662 2646 3456 2560 3574 2545 3780 2638 3662 2646 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[3456 2525 3662 2646 3780 2638 3574 2520 3456 2525 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3544 2654 3338 2575 3456 2560 3662 2646 3544 2654 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[3338 2530 3544 2654 3662 2646 3456 2525 3338 2530 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3427 2662 3221 2591 3338 2575 3544 2654 3427 2662 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[3221 2536 3427 2662 3544 2654 3338 2530 3221 2536 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[3309 2671 3103 2606 3221 2591 3427 2662 3309 2671 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[3103 2542 3309 2671 3427 2662 3221 2536 3103 2542 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 5]
[2839 2706 2633 2670 3103 2606 3309 2671 2839 2706 
] dogrey 
32 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 10 [ 0]
[2633 2569 2839 2706 3309 2671 3103 2542 2633 2569 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
5 Thickness
[] 0 setdash
[] 0 setdash
 (drawsegs) 12 [ 32]
[2603 2216 5250 1521 2603 2216 750 1224 2603 2216 2603 3710 
] dogrey 
[] 0 setdash
[] 0 setdash
5 Thickness
32 Setcolor
%Latex:\end{picture}
 showpage

 end saved restore 

