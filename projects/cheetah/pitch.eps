%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 14 206 581 635 
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-Bold-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold-Oblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3050
%scipos_h=2305
% Dessin en bas a gauche de taille 3050,2305
[1.858784 20 div 0 0 1.858784 20 div neg 141 10 div 6351 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6100 4610] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6100,4610)(203,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[763 576 763 4034 5338 4034 5338 576 763 576 
] dogrey 
33 Setcolor
/absolu true def
32 Setcolor
[] 0 setdash
32 Setcolor
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
5 Thickness
763 235 4575 1413 setclipzone
-1 -1 200000 200000 setclipzone
[] 0 setdash
32 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[763 235 763 1648 5338 1648 5338 235 763 235 
] dogrey 
33 Setcolor
/absolu true def
32 Setcolor
[] 0 setdash
32 Setcolor
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[763 1648 763 235 
] dogrey 
 (drawsegs) 4 [ 3]
[1906 1648 1906 235 
] dogrey 
 (drawsegs) 4 [ 3]
[3050 1648 3050 235 
] dogrey 
 (drawsegs) 4 [ 3]
[4194 1648 4194 235 
] dogrey 
 (drawsegs) 4 [ 3]
[5338 1648 5338 235 
] dogrey 
 (drawsegs) 4 [ 3]
[763 1648 763 235 
] dogrey 
 (drawsegs) 4 [ 3]
[1107 1648 1107 235 
] dogrey 
 (drawsegs) 4 [ 3]
[1308 1648 1308 235 
] dogrey 
 (drawsegs) 4 [ 3]
[1451 1648 1451 235 
] dogrey 
 (drawsegs) 4 [ 3]
[1562 1648 1562 235 
] dogrey 
 (drawsegs) 4 [ 3]
[1653 1648 1653 235 
] dogrey 
 (drawsegs) 4 [ 3]
[1729 1648 1729 235 
] dogrey 
 (drawsegs) 4 [ 3]
[1795 1648 1795 235 
] dogrey 
 (drawsegs) 4 [ 3]
[1854 1648 1854 235 
] dogrey 
 (drawsegs) 4 [ 3]
[1906 1648 1906 235 
] dogrey 
 (drawsegs) 4 [ 3]
[2251 1648 2251 235 
] dogrey 
 (drawsegs) 4 [ 3]
[2452 1648 2452 235 
] dogrey 
 (drawsegs) 4 [ 3]
[2595 1648 2595 235 
] dogrey 
 (drawsegs) 4 [ 3]
[2706 1648 2706 235 
] dogrey 
 (drawsegs) 4 [ 3]
[2796 1648 2796 235 
] dogrey 
 (drawsegs) 4 [ 3]
[2873 1648 2873 235 
] dogrey 
 (drawsegs) 4 [ 3]
[2939 1648 2939 235 
] dogrey 
 (drawsegs) 4 [ 3]
[2998 1648 2998 235 
] dogrey 
 (drawsegs) 4 [ 3]
[3050 1648 3050 235 
] dogrey 
 (drawsegs) 4 [ 3]
[3394 1648 3394 235 
] dogrey 
 (drawsegs) 4 [ 3]
[3596 1648 3596 235 
] dogrey 
 (drawsegs) 4 [ 3]
[3739 1648 3739 235 
] dogrey 
 (drawsegs) 4 [ 3]
[3849 1648 3849 235 
] dogrey 
 (drawsegs) 4 [ 3]
[3940 1648 3940 235 
] dogrey 
 (drawsegs) 4 [ 3]
[4017 1648 4017 235 
] dogrey 
 (drawsegs) 4 [ 3]
[4083 1648 4083 235 
] dogrey 
 (drawsegs) 4 [ 3]
[4141 1648 4141 235 
] dogrey 
 (drawsegs) 4 [ 3]
[4194 1648 4194 235 
] dogrey 
 (drawsegs) 4 [ 3]
[4538 1648 4538 235 
] dogrey 
 (drawsegs) 4 [ 3]
[4739 1648 4739 235 
] dogrey 
 (drawsegs) 4 [ 3]
[4882 1648 4882 235 
] dogrey 
 (drawsegs) 4 [ 3]
[4993 1648 4993 235 
] dogrey 
 (drawsegs) 4 [ 3]
[5084 1648 5084 235 
] dogrey 
 (drawsegs) 4 [ 3]
[5160 1648 5160 235 
] dogrey 
 (drawsegs) 4 [ 3]
[5227 1648 5227 235 
] dogrey 
 (drawsegs) 4 [ 3]
[5285 1648 5285 235 
] dogrey 
[] 0 setdash
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[763 1648 5338 1648 
] dogrey 
 (drawsegs) 4 [ 3]
[763 1365 5338 1365 
] dogrey 
 (drawsegs) 4 [ 3]
[763 1083 5338 1083 
] dogrey 
 (drawsegs) 4 [ 3]
[763 800 5338 800 
] dogrey 
 (drawsegs) 4 [ 3]
[763 518 5338 518 
] dogrey 
 (drawsegs) 4 [ 3]
[763 235 5338 235 
] dogrey 
[] 0 setdash
0 Setcolor
5 Thickness
[] 0 setdash
763 235 4575 1413 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 802 [ 0]
[763 585 774 587 785 589 797 591 808 594 820 596 831 598 843 600 854 603 865 605 
877 607 888 609 900 612 911 614 923 616 934 619 946 621 957 623 968 625 980 628 
991 630 1003 632 1014 634 1026 637 1037 639 1048 641 1060 643 1071 646 1083 648 1094 650 
1106 652 1117 655 1129 657 1140 659 1151 661 1163 664 1174 666 1186 668 1197 671 1209 673 
1220 675 1231 677 1243 680 1254 682 1266 684 1277 686 1289 689 1300 691 1312 693 1323 695 
1334 698 1346 700 1357 702 1369 704 1380 707 1392 709 1403 711 1414 713 1426 716 1437 718 
1449 720 1460 722 1472 725 1483 727 1495 729 1506 732 1517 734 1529 736 1540 738 1552 741 
1563 743 1575 745 1586 747 1597 750 1609 752 1620 754 1632 756 1643 759 1655 761 1666 763 
1678 765 1689 768 1700 770 1712 772 1723 774 1735 777 1746 779 1758 781 1769 784 1780 786 
1792 788 1803 790 1815 793 1826 795 1838 797 1849 799 1861 802 1872 804 1883 806 1895 808 
1906 811 1918 813 1929 815 1941 817 1952 820 1963 822 1975 824 1986 826 1998 829 2009 831 
2021 833 2032 835 2044 838 2055 840 2066 842 2078 845 2089 847 2101 849 2112 851 2124 854 
2135 856 2146 858 2158 860 2169 863 2181 865 2192 867 2204 869 2215 872 2227 874 2238 876 
2249 878 2261 881 2272 883 2284 885 2295 887 2307 890 2318 892 2329 894 2341 897 2352 899 
2364 901 2375 903 2387 906 2398 908 2410 910 2421 912 2432 915 2444 917 2455 919 2467 921 
2478 924 2490 926 2501 928 2512 930 2524 933 2535 935 2547 937 2558 939 2570 942 2581 944 
2593 946 2604 949 2615 951 2627 953 2638 955 2650 958 2661 960 2673 962 2684 964 2695 967 
2707 969 2718 971 2730 973 2741 976 2753 978 2764 980 2776 983 2787 985 2798 987 2810 989 
2821 992 2833 994 2844 996 2856 998 2867 1001 2878 1003 2890 1005 2901 1007 2913 1010 2924 1012 
2936 1014 2947 1017 2959 1019 2970 1021 2981 1023 2993 1026 3004 1028 3016 1030 3027 1032 3039 1035 
3050 1037 3061 1039 3073 1042 3084 1044 3096 1046 3107 1048 3119 1051 3130 1053 3142 1055 3153 1058 
3164 1060 3176 1062 3187 1064 3199 1067 3210 1069 3222 1071 3233 1074 3244 1076 3256 1078 3267 1081 
3279 1083 3290 1085 3302 1088 3313 1090 3325 1093 3336 1095 3347 1097 3359 1100 3370 1102 3382 1105 
3393 1107 3405 1110 3416 1112 3427 1115 3439 1117 3450 1120 3462 1122 3473 1125 3485 1127 3496 1130 
3508 1132 3519 1135 3530 1137 3542 1140 3553 1142 3565 1144 3576 1147 3588 1149 3599 1151 3610 1153 
3622 1155 3633 1157 3645 1159 3656 1160 3668 1162 3679 1164 3691 1165 3702 1167 3713 1168 3725 1169 
3736 1171 3748 1172 3759 1174 3771 1175 3782 1177 3793 1178 3805 1180 3816 1182 3828 1184 3839 1186 
3851 1189 3862 1191 3874 1194 3885 1197 3896 1200 3908 1203 3919 1206 3931 1209 3942 1213 3954 1216 
3965 1219 3976 1223 3988 1226 3999 1230 4011 1234 4022 1237 4034 1241 4045 1244 4057 1248 4068 1252 
4079 1255 4091 1259 4102 1262 4114 1266 4125 1270 4137 1273 4148 1277 4159 1280 4171 1284 4182 1288 
4194 1291 4205 1295 4217 1298 4228 1302 4240 1305 4251 1309 4262 1312 4274 1316 4285 1319 4297 1323 
4308 1326 4320 1330 4331 1333 4342 1337 4354 1340 4365 1344 4377 1347 4388 1351 4400 1354 4411 1358 
4423 1361 4434 1365 4445 1368 4457 1372 4468 1375 4480 1378 4491 1382 4503 1385 4514 1389 4525 1392 
4537 1396 4548 1399 4560 1403 4571 1406 4583 1409 4594 1413 4606 1416 4617 1420 4628 1423 4640 1426 
4651 1430 4663 1433 4674 1437 4686 1440 4697 1444 4708 1447 4720 1450 4731 1454 4743 1457 4754 1461 
4766 1464 4777 1467 4789 1471 4800 1474 4811 1478 4823 1481 4834 1484 4846 1488 4857 1491 4869 1495 
4880 1498 4891 1501 4903 1505 4914 1508 4926 1512 4937 1515 4949 1518 4960 1522 4972 1525 4983 1529 
4994 1532 5006 1535 5017 1539 5029 1542 5040 1546 5052 1549 5063 1552 5074 1556 5086 1559 5097 1563 
5109 1566 5120 1569 5132 1573 5143 1576 5155 1580 5166 1583 5177 1586 5189 1590 5200 1593 5212 1597 
5223 1600 5235 1603 5246 1607 5257 1610 5269 1613 5280 1617 5292 1620 5303 1624 5315 1627 5326 1630 
5333 1632 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
763 235 4575 1413 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 802 [ 0]
[763 427 774 429 785 431 797 433 808 436 820 438 831 440 843 442 854 445 865 447 
877 449 888 451 900 454 911 456 923 458 934 460 946 463 957 465 968 467 980 469 
991 472 1003 474 1014 476 1026 478 1037 481 1048 483 1060 485 1071 487 1083 490 1094 492 
1106 494 1117 496 1129 499 1140 501 1151 503 1163 505 1174 508 1186 510 1197 512 1209 514 
1220 516 1231 519 1243 521 1254 523 1266 525 1277 528 1289 530 1300 532 1312 534 1323 537 
1334 539 1346 541 1357 543 1369 545 1380 548 1392 550 1403 552 1414 554 1426 556 1437 559 
1449 561 1460 563 1472 565 1483 567 1495 570 1506 572 1517 574 1529 576 1540 578 1552 580 
1563 583 1575 585 1586 587 1597 589 1609 591 1620 593 1632 595 1643 598 1655 600 1666 602 
1678 604 1689 606 1700 608 1712 610 1723 612 1735 614 1746 616 1758 618 1769 621 1780 623 
1792 625 1803 627 1815 629 1826 631 1838 633 1849 635 1861 637 1872 639 1883 641 1895 643 
1906 645 1918 646 1929 648 1941 650 1952 652 1963 654 1975 656 1986 658 1998 660 2009 662 
2021 663 2032 665 2044 667 2055 669 2066 671 2078 672 2089 674 2101 676 2112 678 2124 679 
2135 681 2146 683 2158 684 2169 686 2181 688 2192 689 2204 691 2215 693 2227 694 2238 696 
2249 697 2261 699 2272 700 2284 702 2295 703 2307 705 2318 707 2329 708 2341 709 2352 711 
2364 712 2375 714 2387 715 2398 717 2410 718 2421 720 2432 721 2444 722 2455 724 2467 725 
2478 726 2490 728 2501 729 2512 731 2524 732 2535 733 2547 735 2558 736 2570 737 2581 738 
2593 740 2604 741 2615 742 2627 744 2638 745 2650 746 2661 747 2673 749 2684 750 2695 751 
2707 752 2718 754 2730 755 2741 756 2753 757 2764 759 2776 760 2787 761 2798 762 2810 763 
2821 765 2833 766 2844 767 2856 768 2867 769 2878 771 2890 772 2901 773 2913 774 2924 775 
2936 777 2947 778 2959 779 2970 780 2981 781 2993 783 3004 784 3016 785 3027 786 3039 787 
3050 788 3061 790 3073 791 3084 792 3096 793 3107 794 3119 796 3130 797 3142 798 3153 799 
3164 800 3176 801 3187 803 3199 804 3210 805 3222 806 3233 807 3244 809 3256 810 3267 811 
3279 812 3290 814 3302 815 3313 816 3325 818 3336 819 3347 820 3359 822 3370 823 3382 825 
3393 826 3405 827 3416 829 3427 830 3439 832 3450 833 3462 835 3473 836 3485 837 3496 839 
3508 840 3519 842 3530 843 3542 844 3553 845 3565 847 3576 848 3588 849 3599 850 3610 851 
3622 852 3633 853 3645 854 3656 854 3668 855 3679 856 3691 856 3702 857 3713 857 3725 857 
3736 858 3748 858 3759 859 3771 859 3782 860 3793 860 3805 861 3816 862 3828 863 3839 864 
3851 866 3862 867 3874 869 3885 871 3896 873 3908 875 3919 877 3931 880 3942 882 3954 885 
3965 887 3976 890 3988 892 3999 895 4011 898 4022 901 4034 903 4045 906 4057 909 4068 912 
4079 914 4091 917 4102 920 4114 923 4125 926 4137 928 4148 931 4159 934 4171 937 4182 939 
4194 942 4205 945 4217 948 4228 951 4240 953 4251 956 4262 959 4274 962 4285 964 4297 967 
4308 970 4320 973 4331 975 4342 978 4354 981 4365 984 4377 986 4388 989 4400 992 4411 994 
4423 997 4434 1000 4445 1002 4457 1005 4468 1008 4480 1010 4491 1013 4503 1016 4514 1018 4525 1021 
4537 1024 4548 1026 4560 1029 4571 1032 4583 1034 4594 1037 4606 1039 4617 1042 4628 1045 4640 1047 
4651 1050 4663 1052 4674 1055 4686 1057 4697 1060 4708 1062 4720 1065 4731 1067 4743 1070 4754 1072 
4766 1075 4777 1077 4789 1080 4800 1082 4811 1085 4823 1087 4834 1090 4846 1092 4857 1095 4869 1097 
4880 1099 4891 1102 4903 1104 4914 1107 4926 1109 4937 1111 4949 1114 4960 1116 4972 1119 4983 1121 
4994 1123 5006 1126 5017 1128 5029 1130 5040 1133 5052 1135 5063 1138 5074 1140 5086 1142 5097 1145 
5109 1147 5120 1149 5132 1152 5143 1154 5155 1156 5166 1158 5177 1161 5189 1163 5200 1165 5212 1168 
5223 1170 5235 1172 5246 1175 5257 1177 5269 1179 5280 1182 5292 1184 5303 1186 5315 1188 5326 1191 
5333 1192 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
763 235 4575 1413 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 802 [ 0]
[763 958 774 958 785 958 797 958 808 958 820 958 831 958 843 958 854 958 865 958 
877 958 888 958 900 958 911 958 923 958 934 958 946 958 957 958 968 958 980 958 
991 958 1003 958 1014 959 1026 959 1037 959 1048 959 1060 959 1071 959 1083 959 1094 959 
1106 959 1117 959 1129 959 1140 959 1151 959 1163 959 1174 959 1186 959 1197 959 1209 959 
1220 959 1231 959 1243 959 1254 959 1266 959 1277 959 1289 959 1300 959 1312 959 1323 959 
1334 959 1346 959 1357 959 1369 959 1380 959 1392 959 1403 959 1414 959 1426 959 1437 959 
1449 959 1460 959 1472 960 1483 960 1495 960 1506 960 1517 960 1529 960 1540 960 1552 960 
1563 960 1575 960 1586 960 1597 960 1609 960 1620 961 1632 961 1643 961 1655 961 1666 961 
1678 961 1689 961 1700 961 1712 961 1723 962 1735 962 1746 962 1758 962 1769 962 1780 962 
1792 963 1803 963 1815 963 1826 963 1838 963 1849 963 1861 964 1872 964 1883 964 1895 964 
1906 965 1918 965 1929 965 1941 966 1952 966 1963 966 1975 966 1986 967 1998 967 2009 967 
2021 968 2032 968 2044 969 2055 969 2066 969 2078 970 2089 970 2101 971 2112 971 2124 972 
2135 972 2146 972 2158 973 2169 974 2181 974 2192 975 2204 975 2215 976 2227 976 2238 977 
2249 978 2261 978 2272 979 2284 979 2295 980 2307 981 2318 981 2329 982 2341 983 2352 984 
2364 984 2375 985 2387 986 2398 987 2410 987 2421 988 2432 989 2444 990 2455 991 2467 992 
2478 992 2490 993 2501 994 2512 995 2524 996 2535 997 2547 998 2558 999 2570 1000 2581 1001 
2593 1002 2604 1003 2615 1004 2627 1005 2638 1006 2650 1007 2661 1008 2673 1009 2684 1010 2695 1011 
2707 1012 2718 1013 2730 1014 2741 1015 2753 1016 2764 1017 2776 1018 2787 1019 2798 1020 2810 1022 
2821 1023 2833 1024 2844 1025 2856 1026 2867 1027 2878 1029 2890 1030 2901 1031 2913 1032 2924 1033 
2936 1034 2947 1036 2959 1037 2970 1038 2981 1039 2993 1041 3004 1042 3016 1043 3027 1045 3039 1046 
3050 1047 3061 1049 3073 1050 3084 1051 3096 1053 3107 1054 3119 1056 3130 1057 3142 1059 3153 1060 
3164 1062 3176 1064 3187 1065 3199 1067 3210 1069 3222 1071 3233 1073 3244 1074 3256 1076 3267 1078 
3279 1080 3290 1081 3302 1083 3313 1084 3325 1085 3336 1086 3347 1087 3359 1088 3370 1089 3382 1089 
3393 1089 3405 1089 3416 1088 3427 1087 3439 1086 3450 1085 3462 1083 3473 1080 3485 1078 3496 1076 
3508 1075 3519 1076 3530 1079 3542 1086 3553 1094 3565 1104 3576 1114 3588 1123 3599 1132 3610 1141 
3622 1150 3633 1158 3645 1166 3656 1173 3668 1180 3679 1187 3691 1194 3702 1200 3713 1207 3725 1213 
3736 1218 3748 1224 3759 1229 3771 1234 3782 1239 3793 1244 3805 1248 3816 1253 3828 1256 3839 1260 
3851 1264 3862 1267 3874 1270 3885 1272 3896 1275 3908 1277 3919 1279 3931 1281 3942 1283 3954 1285 
3965 1286 3976 1288 3988 1289 3999 1291 4011 1292 4022 1293 4034 1294 4045 1295 4057 1296 4068 1298 
4079 1299 4091 1300 4102 1301 4114 1302 4125 1303 4137 1304 4148 1305 4159 1306 4171 1307 4182 1308 
4194 1309 4205 1310 4217 1311 4228 1312 4240 1313 4251 1314 4262 1315 4274 1316 4285 1317 4297 1318 
4308 1319 4320 1320 4331 1321 4342 1322 4354 1323 4365 1324 4377 1325 4388 1326 4400 1327 4411 1328 
4423 1329 4434 1330 4445 1332 4457 1333 4468 1334 4480 1335 4491 1336 4503 1337 4514 1338 4525 1339 
4537 1340 4548 1341 4560 1342 4571 1343 4583 1345 4594 1346 4606 1347 4617 1348 4628 1349 4640 1350 
4651 1351 4663 1352 4674 1353 4686 1354 4697 1356 4708 1357 4720 1358 4731 1359 4743 1360 4754 1361 
4766 1362 4777 1363 4789 1364 4800 1366 4811 1367 4823 1368 4834 1369 4846 1370 4857 1371 4869 1372 
4880 1373 4891 1375 4903 1376 4914 1377 4926 1378 4937 1379 4949 1380 4960 1381 4972 1382 4983 1383 
4994 1385 5006 1386 5017 1387 5029 1388 5040 1389 5052 1390 5063 1391 5074 1392 5086 1394 5097 1395 
5109 1396 5120 1397 5132 1398 5143 1399 5155 1400 5166 1401 5177 1403 5189 1404 5200 1405 5212 1406 
5223 1407 5235 1408 5246 1409 5257 1411 5269 1412 5280 1413 5292 1414 5303 1415 5315 1416 5326 1417 
5333 1418 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
(-2) 728 1752 0  0.00 [728 1672 71 79] Show
%Latex:\myput{728}{2858}{4}{-2}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 617 1848 0  0.00 [617 1748 111 99] Show
%Latex:\myput{617}{2762}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[763 1648 763 1676 
] dogrey 
32 Setcolor
32 Setcolor
(-1) 1871 1752 0  0.00 [1871 1672 71 79] Show
%Latex:\myput{1871}{2858}{4}{-1}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 1760 1848 0  0.00 [1760 1748 111 99] Show
%Latex:\myput{1760}{2762}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[1906 1648 1906 1676 
] dogrey 
32 Setcolor
32 Setcolor
(0) 3028 1752 0  0.00 [3028 1672 44 79] Show
%Latex:\myput{3028}{2858}{4}{0}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 2917 1848 0  0.00 [2917 1748 111 99] Show
%Latex:\myput{2917}{2762}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[3050 1648 3050 1676 
] dogrey 
32 Setcolor
32 Setcolor
(1) 4172 1752 0  0.00 [4172 1672 44 79] Show
%Latex:\myput{4172}{2858}{4}{1}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 4061 1848 0  0.00 [4061 1748 111 99] Show
%Latex:\myput{4061}{2762}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[4194 1648 4194 1676 
] dogrey 
32 Setcolor
32 Setcolor
(2) 5316 1752 0  0.00 [5316 1672 44 79] Show
%Latex:\myput{5316}{2858}{4}{2}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 5205 1848 0  0.00 [5205 1748 111 99] Show
%Latex:\myput{5205}{2762}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[5338 1648 5338 1676 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[763 1648 763 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[1107 1648 1107 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[1308 1648 1308 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[1451 1648 1451 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[1562 1648 1562 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[1653 1648 1653 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[1729 1648 1729 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[1795 1648 1795 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[1854 1648 1854 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[1906 1648 1906 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[2251 1648 2251 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[2452 1648 2452 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[2595 1648 2595 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[2706 1648 2706 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[2796 1648 2796 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[2873 1648 2873 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[2939 1648 2939 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[2998 1648 2998 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[3050 1648 3050 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[3394 1648 3394 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[3596 1648 3596 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[3739 1648 3739 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[3849 1648 3849 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[3940 1648 3940 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[4017 1648 4017 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[4083 1648 4083 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[4141 1648 4141 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[4194 1648 4194 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[4538 1648 4538 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[4739 1648 4739 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[4882 1648 4882 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[4993 1648 4993 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[5084 1648 5084 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[5160 1648 5160 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[5227 1648 5227 1669 
] dogrey 
 (drawsegs) 4 [ 32]
[5285 1648 5285 1669 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-150) 490 1686 0  0.00 [490 1586 200 99] Show
%Latex:\myput{490}{2924}{5}{-150}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[763 1648 702 1648 
] dogrey 
32 Setcolor
32 Setcolor
(-100) 490 1403 0  0.00 [490 1303 200 99] Show
%Latex:\myput{490}{3207}{5}{-100}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[763 1365 702 1365 
] dogrey 
32 Setcolor
32 Setcolor
(-50) 546 1121 0  0.00 [546 1021 144 99] Show
%Latex:\myput{546}{3489}{5}{-50}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[763 1083 702 1083 
] dogrey 
32 Setcolor
32 Setcolor
(0) 635 838 0  0.00 [635 738 55 99] Show
%Latex:\myput{635}{3772}{5}{0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[763 800 702 800 
] dogrey 
32 Setcolor
32 Setcolor
(50) 579 556 0  0.00 [579 456 111 99] Show
%Latex:\myput{579}{4054}{5}{50}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[763 518 702 518 
] dogrey 
32 Setcolor
32 Setcolor
(100) 524 273 0  0.00 [524 173 166 99] Show
%Latex:\myput{524}{4337}{5}{100}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[763 235 702 235 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[763 1648 718 1648 
] dogrey 
 (drawsegs) 4 [ 32]
[763 1577 718 1577 
] dogrey 
 (drawsegs) 4 [ 32]
[763 1507 718 1507 
] dogrey 
 (drawsegs) 4 [ 32]
[763 1436 718 1436 
] dogrey 
 (drawsegs) 4 [ 32]
[763 1365 718 1365 
] dogrey 
 (drawsegs) 4 [ 32]
[763 1295 718 1295 
] dogrey 
 (drawsegs) 4 [ 32]
[763 1224 718 1224 
] dogrey 
 (drawsegs) 4 [ 32]
[763 1153 718 1153 
] dogrey 
 (drawsegs) 4 [ 32]
[763 1083 718 1083 
] dogrey 
 (drawsegs) 4 [ 32]
[763 1012 718 1012 
] dogrey 
 (drawsegs) 4 [ 32]
[763 942 718 942 
] dogrey 
 (drawsegs) 4 [ 32]
[763 871 718 871 
] dogrey 
 (drawsegs) 4 [ 32]
[763 800 718 800 
] dogrey 
 (drawsegs) 4 [ 32]
[763 730 718 730 
] dogrey 
 (drawsegs) 4 [ 32]
[763 659 718 659 
] dogrey 
 (drawsegs) 4 [ 32]
[763 588 718 588 
] dogrey 
 (drawsegs) 4 [ 32]
[763 518 718 518 
] dogrey 
 (drawsegs) 4 [ 32]
[763 447 718 447 
] dogrey 
 (drawsegs) 4 [ 32]
[763 377 718 377 
] dogrey 
 (drawsegs) 4 [ 32]
[763 306 718 306 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[763 1648 5338 1648 
] dogrey 
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[763 1648 763 235 
] dogrey 
32 Setcolor
 (drawbox) 4 [ 0]
[763 235 4575 1413 
] dogrey 
32 Setcolor
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Magnitude ) 2802 144 0  0.00 [2802 44 494 99] Show
%Latex:\myput{2802}{4466}{5}{Magnitude }
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
( Hz) 2975 2033 0  0.00 [2975 1933 150 99] Show
%Latex:\myput{2975}{2577}{5}{ Hz}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(db) 462 975 0 270.00 [462 875 111 99] Show
%Latex:\myput{462}{3635}{5}{db}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
5 Thickness
763 2218 4575 1412 setclipzone
-1 -1 200000 200000 setclipzone
[] 0 setdash
32 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[763 2218 763 3630 5338 3630 5338 2218 763 2218 
] dogrey 
33 Setcolor
/absolu true def
32 Setcolor
[] 0 setdash
32 Setcolor
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[763 3630 763 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[1906 3630 1906 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[3050 3630 3050 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[4194 3630 4194 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[5338 3630 5338 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[763 3630 763 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[1107 3630 1107 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[1308 3630 1308 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[1451 3630 1451 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[1562 3630 1562 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[1653 3630 1653 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[1729 3630 1729 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[1795 3630 1795 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[1854 3630 1854 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[1906 3630 1906 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[2251 3630 2251 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[2452 3630 2452 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[2595 3630 2595 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[2706 3630 2706 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[2796 3630 2796 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[2873 3630 2873 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[2939 3630 2939 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[2998 3630 2998 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[3050 3630 3050 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[3394 3630 3394 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[3596 3630 3596 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[3739 3630 3739 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[3849 3630 3849 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[3940 3630 3940 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[4017 3630 4017 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[4083 3630 4083 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[4141 3630 4141 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[4194 3630 4194 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[4538 3630 4538 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[4739 3630 4739 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[4882 3630 4882 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[4993 3630 4993 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[5084 3630 5084 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[5160 3630 5160 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[5227 3630 5227 2218 
] dogrey 
 (drawsegs) 4 [ 3]
[5285 3630 5285 2218 
] dogrey 
[] 0 setdash
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[763 3630 5338 3630 
] dogrey 
 (drawsegs) 4 [ 3]
[763 3395 5338 3395 
] dogrey 
 (drawsegs) 4 [ 3]
[763 3159 5338 3159 
] dogrey 
 (drawsegs) 4 [ 3]
[763 2924 5338 2924 
] dogrey 
 (drawsegs) 4 [ 3]
[763 2688 5338 2688 
] dogrey 
 (drawsegs) 4 [ 3]
[763 2453 5338 2453 
] dogrey 
 (drawsegs) 4 [ 3]
[763 2218 5338 2218 
] dogrey 
[] 0 setdash
0 Setcolor
5 Thickness
[] 0 setdash
763 2218 4575 1412 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 802 [ 0]
[763 2265 774 2265 785 2265 797 2265 808 2265 820 2265 831 2265 843 2265 854 2265 865 2265 
877 2265 888 2265 900 2265 911 2265 923 2265 934 2265 946 2265 957 2265 968 2265 980 2265 
991 2265 1003 2265 1014 2265 1026 2265 1037 2265 1048 2265 1060 2265 1071 2265 1083 2265 1094 2265 
1106 2265 1117 2265 1129 2265 1140 2265 1151 2265 1163 2265 1174 2265 1186 2265 1197 2265 1209 2265 
1220 2265 1231 2265 1243 2265 1254 2265 1266 2265 1277 2265 1289 2265 1300 2265 1312 2265 1323 2265 
1334 2265 1346 2265 1357 2265 1369 2265 1380 2265 1392 2265 1403 2265 1414 2265 1426 2265 1437 2265 
1449 2266 1460 2266 1472 2266 1483 2266 1495 2266 1506 2266 1517 2266 1529 2266 1540 2266 1552 2266 
1563 2266 1575 2266 1586 2266 1597 2266 1609 2266 1620 2266 1632 2266 1643 2266 1655 2266 1666 2266 
1678 2266 1689 2266 1700 2266 1712 2266 1723 2266 1735 2266 1746 2266 1758 2266 1769 2266 1780 2266 
1792 2266 1803 2266 1815 2266 1826 2266 1838 2266 1849 2266 1861 2266 1872 2266 1883 2267 1895 2267 
1906 2267 1918 2267 1929 2267 1941 2267 1952 2267 1963 2267 1975 2267 1986 2267 1998 2267 2009 2267 
2021 2267 2032 2267 2044 2267 2055 2267 2066 2267 2078 2267 2089 2267 2101 2267 2112 2268 2124 2268 
2135 2268 2146 2268 2158 2268 2169 2268 2181 2268 2192 2268 2204 2268 2215 2268 2227 2268 2238 2268 
2249 2268 2261 2269 2272 2269 2284 2269 2295 2269 2307 2269 2318 2269 2329 2269 2341 2269 2352 2269 
2364 2269 2375 2269 2387 2270 2398 2270 2410 2270 2421 2270 2432 2270 2444 2270 2455 2270 2467 2270 
2478 2271 2490 2271 2501 2271 2512 2271 2524 2271 2535 2271 2547 2271 2558 2272 2570 2272 2581 2272 
2593 2272 2604 2272 2615 2272 2627 2273 2638 2273 2650 2273 2661 2273 2673 2273 2684 2274 2695 2274 
2707 2274 2718 2274 2730 2274 2741 2275 2753 2275 2764 2275 2776 2275 2787 2276 2798 2276 2810 2276 
2821 2276 2833 2277 2844 2277 2856 2277 2867 2277 2878 2278 2890 2278 2901 2278 2913 2279 2924 2279 
2936 2279 2947 2280 2959 2280 2970 2280 2981 2281 2993 2281 3004 2281 3016 2282 3027 2282 3039 2283 
3050 2283 3061 2283 3073 2284 3084 2284 3096 2285 3107 2285 3119 2286 3130 2286 3142 2287 3153 2287 
3164 2288 3176 2288 3187 2289 3199 2290 3210 2290 3222 2291 3233 2292 3244 2292 3256 2293 3267 2294 
3279 2295 3290 2296 3302 2296 3313 2297 3325 2298 3336 2299 3347 2299 3359 2300 3370 2301 3382 2301 
3393 2302 3405 2303 3416 2303 3427 2304 3439 2304 3450 2304 3462 2305 3473 2305 3485 2305 3496 2305 
3508 2305 3519 2305 3530 2305 3542 2305 3553 2304 3565 2304 3576 2304 3588 2303 3599 2303 3610 2303 
3622 2302 3633 2302 3645 2302 3656 2302 3668 2302 3679 2303 3691 2303 3702 2304 3713 2305 3725 2307 
3736 2309 3748 2312 3759 2315 3771 2318 3782 2321 3793 2326 3805 2330 3816 2334 3828 2339 3839 2344 
3851 2349 3862 2354 3874 2359 3885 2364 3896 2369 3908 2374 3919 2378 3931 2383 3942 2387 3954 2391 
3965 2395 3976 2398 3988 2401 3999 2405 4011 2407 4022 2410 4034 2413 4045 2415 4057 2418 4068 2420 
4079 2422 4091 2424 4102 2426 4114 2427 4125 2429 4137 2431 4148 2432 4159 2434 4171 2435 4182 2436 
4194 2438 4205 2439 4217 2440 4228 2441 4240 2442 4251 2443 4262 2444 4274 2445 4285 2446 4297 2447 
4308 2447 4320 2448 4331 2449 4342 2450 4354 2450 4365 2451 4377 2452 4388 2452 4400 2453 4411 2454 
4423 2454 4434 2455 4445 2455 4457 2456 4468 2456 4480 2457 4491 2457 4503 2458 4514 2458 4525 2459 
4537 2459 4548 2460 4560 2460 4571 2460 4583 2461 4594 2461 4606 2462 4617 2462 4628 2462 4640 2463 
4651 2463 4663 2463 4674 2464 4686 2464 4697 2464 4708 2465 4720 2465 4731 2465 4743 2465 4754 2466 
4766 2466 4777 2466 4789 2466 4800 2467 4811 2467 4823 2467 4834 2467 4846 2468 4857 2468 4869 2468 
4880 2468 4891 2468 4903 2469 4914 2469 4926 2469 4937 2469 4949 2469 4960 2469 4972 2470 4983 2470 
4994 2470 5006 2470 5017 2470 5029 2470 5040 2471 5052 2471 5063 2471 5074 2471 5086 2471 5097 2471 
5109 2471 5120 2471 5132 2472 5143 2472 5155 2472 5166 2472 5177 2472 5189 2472 5200 2472 5212 2472 
5223 2472 5235 2473 5246 2473 5257 2473 5269 2473 5280 2473 5292 2473 5303 2473 5315 2473 5326 2473 
5333 2473 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
763 2218 4575 1412 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 802 [ 0]
[763 3104 774 3104 785 3104 797 3104 808 3103 820 3103 831 3103 843 3103 854 3103 865 3102 
877 3102 888 3102 900 3102 911 3101 923 3101 934 3101 946 3101 957 3100 968 3100 980 3100 
991 3099 1003 3099 1014 3099 1026 3099 1037 3098 1048 3098 1060 3098 1071 3097 1083 3097 1094 3097 
1106 3096 1117 3096 1129 3095 1140 3095 1151 3095 1163 3094 1174 3094 1186 3093 1197 3093 1209 3093 
1220 3092 1231 3092 1243 3091 1254 3091 1266 3090 1277 3090 1289 3089 1300 3089 1312 3088 1323 3088 
1334 3087 1346 3086 1357 3086 1369 3085 1380 3085 1392 3084 1403 3083 1414 3083 1426 3082 1437 3081 
1449 3081 1460 3080 1472 3079 1483 3079 1495 3078 1506 3077 1517 3076 1529 3076 1540 3075 1552 3074 
1563 3073 1575 3072 1586 3071 1597 3070 1609 3070 1620 3069 1632 3068 1643 3067 1655 3066 1666 3065 
1678 3064 1689 3063 1700 3062 1712 3061 1723 3060 1735 3059 1746 3057 1758 3056 1769 3055 1780 3054 
1792 3053 1803 3052 1815 3051 1826 3049 1838 3048 1849 3047 1861 3046 1872 3044 1883 3043 1895 3042 
1906 3041 1918 3039 1929 3038 1941 3037 1952 3035 1963 3034 1975 3032 1986 3031 1998 3030 2009 3028 
2021 3027 2032 3026 2044 3024 2055 3023 2066 3021 2078 3020 2089 3018 2101 3017 2112 3016 2124 3014 
2135 3013 2146 3011 2158 3010 2169 3009 2181 3007 2192 3006 2204 3004 2215 3003 2227 3002 2238 3000 
2249 2999 2261 2998 2272 2996 2284 2995 2295 2994 2307 2993 2318 2991 2329 2990 2341 2989 2352 2988 
2364 2986 2375 2985 2387 2984 2398 2983 2410 2982 2421 2981 2432 2980 2444 2979 2455 2978 2467 2977 
2478 2976 2490 2975 2501 2974 2512 2973 2524 2972 2535 2971 2547 2970 2558 2970 2570 2969 2581 2968 
2593 2967 2604 2967 2615 2966 2627 2965 2638 2965 2650 2964 2661 2964 2673 2963 2684 2963 2695 2962 
2707 2962 2718 2961 2730 2961 2741 2960 2753 2960 2764 2960 2776 2959 2787 2959 2798 2959 2810 2959 
2821 2959 2833 2958 2844 2958 2856 2958 2867 2958 2878 2958 2890 2958 2901 2958 2913 2958 2924 2958 
2936 2958 2947 2958 2959 2959 2970 2959 2981 2959 2993 2959 3004 2960 3016 2960 3027 2960 3039 2961 
3050 2961 3061 2961 3073 2962 3084 2962 3096 2963 3107 2963 3119 2964 3130 2965 3142 2965 3153 2966 
3164 2967 3176 2968 3187 2969 3199 2970 3210 2970 3222 2971 3233 2973 3244 2974 3256 2975 3267 2976 
3279 2977 3290 2978 3302 2980 3313 2981 3325 2982 3336 2984 3347 2985 3359 2986 3370 2988 3382 2989 
3393 2990 3405 2991 3416 2993 3427 2994 3439 2995 3450 2996 3462 2997 3473 2999 3485 3000 3496 3001 
3508 3002 3519 3002 3530 3003 3542 3004 3553 3005 3565 3006 3576 3007 3588 3007 3599 3008 3610 3009 
3622 3010 3633 3011 3645 3012 3656 3014 3668 3015 3679 3017 3691 3019 3702 3021 3713 3024 3725 3028 
3736 3031 3748 3035 3759 3040 3771 3045 3782 3050 3793 3056 3805 3062 3816 3068 3828 3075 3839 3082 
3851 3089 3862 3096 3874 3103 3885 3110 3896 3117 3908 3124 3919 3130 3931 3137 3942 3143 3954 3149 
3965 3155 3976 3161 3988 3167 3999 3172 4011 3178 4022 3183 4034 3188 4045 3193 4057 3198 4068 3202 
4079 3207 4091 3211 4102 3216 4114 3220 4125 3225 4137 3229 4148 3233 4159 3237 4171 3241 4182 3245 
4194 3249 4205 3253 4217 3257 4228 3261 4240 3265 4251 3269 4262 3273 4274 3276 4285 3280 4297 3284 
4308 3288 4320 3291 4331 3295 4342 3299 4354 3302 4365 3306 4377 3309 4388 3313 4400 3316 4411 3320 
4423 3323 4434 3327 4445 3330 4457 3334 4468 3337 4480 3340 4491 3344 4503 3347 4514 3350 4525 3353 
4537 3356 4548 3360 4560 3363 4571 3366 4583 3369 4594 3372 4606 3375 4617 3378 4628 3381 4640 3384 
4651 3386 4663 3389 4674 3392 4686 3395 4697 3398 4708 3400 4720 3403 4731 3405 4743 3408 4754 3411 
4766 3413 4777 3415 4789 3418 4800 3420 4811 3423 4823 3425 4834 3427 4846 3429 4857 3432 4869 3434 
4880 3436 4891 3438 4903 3440 4914 3442 4926 3444 4937 3446 4949 3448 4960 3450 4972 3452 4983 3453 
4994 3455 5006 3457 5017 3459 5029 3460 5040 3462 5052 3463 5063 3465 5074 3467 5086 3468 5097 3470 
5109 3471 5120 3472 5132 3474 5143 3475 5155 3477 5166 3478 5177 3479 5189 3480 5200 3482 5212 3483 
5223 3484 5235 3485 5246 3486 5257 3487 5269 3488 5280 3490 5292 3491 5303 3492 5315 3493 5326 3494 
5333 3494 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
763 2218 4575 1412 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 802 [ 0]
[763 2697 774 2697 785 2697 797 2697 808 2698 820 2698 831 2698 843 2698 854 2698 865 2699 
877 2699 888 2699 900 2699 911 2700 923 2700 934 2700 946 2700 957 2701 968 2701 980 2701 
991 2702 1003 2702 1014 2702 1026 2702 1037 2703 1048 2703 1060 2703 1071 2704 1083 2704 1094 2705 
1106 2705 1117 2705 1129 2706 1140 2706 1151 2706 1163 2707 1174 2707 1186 2708 1197 2708 1209 2709 
1220 2709 1231 2710 1243 2710 1254 2711 1266 2711 1277 2712 1289 2712 1300 2713 1312 2713 1323 2714 
1334 2714 1346 2715 1357 2716 1369 2716 1380 2717 1392 2717 1403 2718 1414 2719 1426 2720 1437 2720 
1449 2721 1460 2722 1472 2722 1483 2723 1495 2724 1506 2725 1517 2726 1529 2726 1540 2727 1552 2728 
1563 2729 1575 2730 1586 2731 1597 2732 1609 2733 1620 2734 1632 2735 1643 2736 1655 2737 1666 2738 
1678 2739 1689 2740 1700 2741 1712 2742 1723 2743 1735 2745 1746 2746 1758 2747 1769 2748 1780 2750 
1792 2751 1803 2752 1815 2754 1826 2755 1838 2756 1849 2758 1861 2759 1872 2761 1883 2762 1895 2763 
1906 2765 1918 2767 1929 2768 1941 2770 1952 2771 1963 2773 1975 2774 1986 2776 1998 2778 2009 2780 
2021 2781 2032 2783 2044 2785 2055 2786 2066 2788 2078 2790 2089 2792 2101 2794 2112 2796 2124 2797 
2135 2799 2146 2801 2158 2803 2169 2805 2181 2807 2192 2809 2204 2811 2215 2813 2227 2815 2238 2817 
2249 2819 2261 2821 2272 2823 2284 2825 2295 2827 2307 2829 2318 2831 2329 2833 2341 2835 2352 2837 
2364 2839 2375 2841 2387 2843 2398 2845 2410 2847 2421 2849 2432 2851 2444 2853 2455 2855 2467 2857 
2478 2859 2490 2861 2501 2863 2512 2865 2524 2867 2535 2869 2547 2871 2558 2873 2570 2875 2581 2877 
2593 2880 2604 2882 2615 2884 2627 2886 2638 2888 2650 2890 2661 2892 2673 2894 2684 2896 2695 2898 
2707 2900 2718 2902 2730 2904 2741 2906 2753 2909 2764 2911 2776 2913 2787 2915 2798 2917 2810 2919 
2821 2921 2833 2924 2844 2926 2856 2928 2867 2930 2878 2933 2890 2935 2901 2937 2913 2939 2924 2942 
2936 2944 2947 2946 2959 2949 2970 2951 2981 2954 2993 2956 3004 2959 3016 2961 3027 2964 3039 2966 
3050 2969 3061 2972 3073 2974 3084 2977 3096 2980 3107 2983 3119 2986 3130 2989 3142 2992 3153 2994 
3164 2997 3176 3000 3187 3003 3199 3005 3210 3008 3222 3010 3233 3012 3244 3014 3256 3016 3267 3017 
3279 3018 3290 3019 3302 3020 3313 3021 3325 3022 3336 3023 3347 3024 3359 3024 3370 3025 3382 3027 
3393 3028 3405 3030 3416 3032 3427 3036 3439 3040 3450 3046 3462 3053 3473 3064 3485 3078 3496 3096 
3508 3120 3519 3148 3530 3178 3542 3206 3553 3229 3565 3246 3576 3258 3588 3267 3599 3273 3610 3276 
3622 3278 3633 3278 3645 3277 3656 3275 3668 3273 3679 3269 3691 3265 3702 3261 3713 3255 3725 3250 
3736 3244 3748 3237 3759 3230 3771 3223 3782 3215 3793 3207 3805 3198 3816 3190 3828 3181 3839 3172 
3851 3163 3862 3154 3874 3145 3885 3136 3896 3128 3908 3119 3919 3111 3931 3103 3942 3095 3954 3088 
3965 3081 3976 3074 3988 3068 3999 3062 4011 3056 4022 3051 4034 3045 4045 3040 4057 3036 4068 3031 
4079 3027 4091 3023 4102 3019 4114 3015 4125 3011 4137 3008 4148 3005 4159 3002 4171 2999 4182 2996 
4194 2993 4205 2990 4217 2988 4228 2985 4240 2983 4251 2981 4262 2978 4274 2976 4285 2974 4297 2972 
4308 2970 4320 2969 4331 2967 4342 2965 4354 2963 4365 2962 4377 2960 4388 2959 4400 2957 4411 2956 
4423 2954 4434 2953 4445 2952 4457 2950 4468 2949 4480 2948 4491 2947 4503 2946 4514 2945 4525 2944 
4537 2943 4548 2941 4560 2940 4571 2940 4583 2939 4594 2938 4606 2937 4617 2936 4628 2935 4640 2934 
4651 2933 4663 2933 4674 2932 4686 2931 4697 2930 4708 2930 4720 2929 4731 2928 4743 2928 4754 2927 
4766 2926 4777 2926 4789 2925 4800 2925 4811 2924 4823 2924 4834 2923 4846 2923 4857 2922 4869 2922 
4880 2921 4891 2921 4903 2920 4914 2920 4926 2919 4937 2919 4949 2918 4960 2918 4972 2917 4983 2917 
4994 2917 5006 2916 5017 2916 5029 2916 5040 2915 5052 2915 5063 2915 5074 2914 5086 2914 5097 2914 
5109 2913 5120 2913 5132 2913 5143 2912 5155 2912 5166 2912 5177 2912 5189 2911 5200 2911 5212 2911 
5223 2911 5235 2910 5246 2910 5257 2910 5269 2910 5280 2910 5292 2909 5303 2909 5315 2909 5326 2909 
5333 2909 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
(-2) 728 3734 0  0.00 [728 3654 71 79] Show
%Latex:\myput{728}{876}{4}{-2}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 617 3830 0  0.00 [617 3730 111 99] Show
%Latex:\myput{617}{780}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[763 3630 763 3658 
] dogrey 
32 Setcolor
32 Setcolor
(-1) 1871 3734 0  0.00 [1871 3654 71 79] Show
%Latex:\myput{1871}{876}{4}{-1}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 1760 3830 0  0.00 [1760 3730 111 99] Show
%Latex:\myput{1760}{780}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[1906 3630 1906 3658 
] dogrey 
32 Setcolor
32 Setcolor
(0) 3028 3734 0  0.00 [3028 3654 44 79] Show
%Latex:\myput{3028}{876}{4}{0}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 2917 3830 0  0.00 [2917 3730 111 99] Show
%Latex:\myput{2917}{780}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[3050 3630 3050 3658 
] dogrey 
32 Setcolor
32 Setcolor
(1) 4172 3734 0  0.00 [4172 3654 44 79] Show
%Latex:\myput{4172}{876}{4}{1}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 4061 3830 0  0.00 [4061 3730 111 99] Show
%Latex:\myput{4061}{780}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[4194 3630 4194 3658 
] dogrey 
32 Setcolor
32 Setcolor
(2) 5316 3734 0  0.00 [5316 3654 44 79] Show
%Latex:\myput{5316}{876}{4}{2}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 5205 3830 0  0.00 [5205 3730 111 99] Show
%Latex:\myput{5205}{780}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[5338 3630 5338 3658 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[763 3630 763 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[1107 3630 1107 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[1308 3630 1308 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[1451 3630 1451 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[1562 3630 1562 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[1653 3630 1653 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[1729 3630 1729 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[1795 3630 1795 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[1854 3630 1854 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[1906 3630 1906 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[2251 3630 2251 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[2452 3630 2452 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[2595 3630 2595 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[2706 3630 2706 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[2796 3630 2796 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[2873 3630 2873 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[2939 3630 2939 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[2998 3630 2998 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[3050 3630 3050 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[3394 3630 3394 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[3596 3630 3596 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[3739 3630 3739 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[3849 3630 3849 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[3940 3630 3940 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[4017 3630 4017 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[4083 3630 4083 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[4141 3630 4141 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[4194 3630 4194 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[4538 3630 4538 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[4739 3630 4739 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[4882 3630 4882 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[4993 3630 4993 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[5084 3630 5084 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[5160 3630 5160 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[5227 3630 5227 3651 
] dogrey 
 (drawsegs) 4 [ 32]
[5285 3630 5285 3651 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-400) 490 3668 0  0.00 [490 3568 200 99] Show
%Latex:\myput{490}{942}{5}{-400}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[763 3630 702 3630 
] dogrey 
32 Setcolor
32 Setcolor
(-300) 490 3433 0  0.00 [490 3333 200 99] Show
%Latex:\myput{490}{1177}{5}{-300}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[763 3395 702 3395 
] dogrey 
32 Setcolor
32 Setcolor
(-200) 490 3197 0  0.00 [490 3097 200 99] Show
%Latex:\myput{490}{1413}{5}{-200}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[763 3159 702 3159 
] dogrey 
32 Setcolor
32 Setcolor
(-100) 490 2962 0  0.00 [490 2862 200 99] Show
%Latex:\myput{490}{1648}{5}{-100}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[763 2924 702 2924 
] dogrey 
32 Setcolor
32 Setcolor
(0) 635 2726 0  0.00 [635 2626 55 99] Show
%Latex:\myput{635}{1884}{5}{0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[763 2688 702 2688 
] dogrey 
32 Setcolor
32 Setcolor
(100) 524 2491 0  0.00 [524 2391 166 99] Show
%Latex:\myput{524}{2119}{5}{100}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[763 2453 702 2453 
] dogrey 
32 Setcolor
32 Setcolor
(200) 524 2256 0  0.00 [524 2156 166 99] Show
%Latex:\myput{524}{2354}{5}{200}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[763 2218 702 2218 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[763 3630 718 3630 
] dogrey 
 (drawsegs) 4 [ 32]
[763 3571 718 3571 
] dogrey 
 (drawsegs) 4 [ 32]
[763 3512 718 3512 
] dogrey 
 (drawsegs) 4 [ 32]
[763 3454 718 3454 
] dogrey 
 (drawsegs) 4 [ 32]
[763 3395 718 3395 
] dogrey 
 (drawsegs) 4 [ 32]
[763 3336 718 3336 
] dogrey 
 (drawsegs) 4 [ 32]
[763 3277 718 3277 
] dogrey 
 (drawsegs) 4 [ 32]
[763 3218 718 3218 
] dogrey 
 (drawsegs) 4 [ 32]
[763 3159 718 3159 
] dogrey 
 (drawsegs) 4 [ 32]
[763 3100 718 3100 
] dogrey 
 (drawsegs) 4 [ 32]
[763 3042 718 3042 
] dogrey 
 (drawsegs) 4 [ 32]
[763 2983 718 2983 
] dogrey 
 (drawsegs) 4 [ 32]
[763 2924 718 2924 
] dogrey 
 (drawsegs) 4 [ 32]
[763 2865 718 2865 
] dogrey 
 (drawsegs) 4 [ 32]
[763 2806 718 2806 
] dogrey 
 (drawsegs) 4 [ 32]
[763 2747 718 2747 
] dogrey 
 (drawsegs) 4 [ 32]
[763 2688 718 2688 
] dogrey 
 (drawsegs) 4 [ 32]
[763 2630 718 2630 
] dogrey 
 (drawsegs) 4 [ 32]
[763 2571 718 2571 
] dogrey 
 (drawsegs) 4 [ 32]
[763 2512 718 2512 
] dogrey 
 (drawsegs) 4 [ 32]
[763 2453 718 2453 
] dogrey 
 (drawsegs) 4 [ 32]
[763 2394 718 2394 
] dogrey 
 (drawsegs) 4 [ 32]
[763 2335 718 2335 
] dogrey 
 (drawsegs) 4 [ 32]
[763 2277 718 2277 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[763 3630 5338 3630 
] dogrey 
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[763 3630 763 2218 
] dogrey 
32 Setcolor
 (drawbox) 4 [ 0]
[763 2218 4575 1412 
] dogrey 
32 Setcolor
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Phase ) 2894 2127 0  0.00 [2894 2027 311 99] Show
%Latex:\myput{2894}{2483}{5}{Phase }
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
( Hz) 2975 4015 0  0.00 [2975 3915 150 99] Show
%Latex:\myput{2975}{595}{5}{ Hz}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(degrees) 462 3083 0 270.00 [462 2983 361 99] Show
%Latex:\myput{462}{1527}{5}{degrees}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[763 4022 763 4368 5338 4368 5338 4022 763 4022 
] dogrey 
33 Setcolor
/absolu true def
32 Setcolor
[] 0 setdash
32 Setcolor
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
5 Thickness
[] 0 setdash
 (drawsegs) 4 [ 0]
[763 4126 1129 4126 
] dogrey 
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(open loop) 1220 4145 0  0.00 [1220 4045 439 99] Show
%Latex:\myput{1220}{465}{5}{open loop}
1 Setcolor
5 Thickness
[] 0 setdash
1 Setcolor
5 Thickness
[] 0 setdash
 (drawsegs) 4 [ 1]
[763 4299 1129 4299 
] dogrey 
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(compensated open loop) 1220 4317 0  0.00 [1220 4217 1067 99] Show
%Latex:\myput{1220}{293}{5}{compensated open loop}
2 Setcolor
5 Thickness
[] 0 setdash
2 Setcolor
5 Thickness
[] 0 setdash
 (drawsegs) 4 [ 2]
[763 4472 1129 4472 
] dogrey 
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(compensated closed loop) 1220 4490 0  0.00 [1220 4390 1133 99] Show
%Latex:\myput{1220}{120}{5}{compensated closed loop}
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
%Latex:\end{picture}
 showpage

 end saved restore 

