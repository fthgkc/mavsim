%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 14 210 581 631 
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-Bold-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold-Oblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2230
% Dessin en bas a gauche de taille 3000,2230
[1.889764 20 div 0 0 1.889764 20 div neg 141 10 div 6316 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4460] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4460)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[750 558 750 3903 5250 3903 5250 558 750 558 
] dogrey 
33 Setcolor
/absolu true def
32 Setcolor
[] 0 setdash
32 Setcolor
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
5 Thickness
750 228 4500 1366 setclipzone
-1 -1 200000 200000 setclipzone
[] 0 setdash
32 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[750 228 750 1594 5250 1594 5250 228 750 228 
] dogrey 
33 Setcolor
/absolu true def
32 Setcolor
[] 0 setdash
32 Setcolor
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[750 1594 750 228 
] dogrey 
 (drawsegs) 4 [ 3]
[1875 1594 1875 228 
] dogrey 
 (drawsegs) 4 [ 3]
[3000 1594 3000 228 
] dogrey 
 (drawsegs) 4 [ 3]
[4125 1594 4125 228 
] dogrey 
 (drawsegs) 4 [ 3]
[5250 1594 5250 228 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1594 750 228 
] dogrey 
 (drawsegs) 4 [ 3]
[1089 1594 1089 228 
] dogrey 
 (drawsegs) 4 [ 3]
[1287 1594 1287 228 
] dogrey 
 (drawsegs) 4 [ 3]
[1427 1594 1427 228 
] dogrey 
 (drawsegs) 4 [ 3]
[1536 1594 1536 228 
] dogrey 
 (drawsegs) 4 [ 3]
[1625 1594 1625 228 
] dogrey 
 (drawsegs) 4 [ 3]
[1701 1594 1701 228 
] dogrey 
 (drawsegs) 4 [ 3]
[1766 1594 1766 228 
] dogrey 
 (drawsegs) 4 [ 3]
[1824 1594 1824 228 
] dogrey 
 (drawsegs) 4 [ 3]
[1875 1594 1875 228 
] dogrey 
 (drawsegs) 4 [ 3]
[2214 1594 2214 228 
] dogrey 
 (drawsegs) 4 [ 3]
[2412 1594 2412 228 
] dogrey 
 (drawsegs) 4 [ 3]
[2552 1594 2552 228 
] dogrey 
 (drawsegs) 4 [ 3]
[2661 1594 2661 228 
] dogrey 
 (drawsegs) 4 [ 3]
[2750 1594 2750 228 
] dogrey 
 (drawsegs) 4 [ 3]
[2826 1594 2826 228 
] dogrey 
 (drawsegs) 4 [ 3]
[2891 1594 2891 228 
] dogrey 
 (drawsegs) 4 [ 3]
[2949 1594 2949 228 
] dogrey 
 (drawsegs) 4 [ 3]
[3000 1594 3000 228 
] dogrey 
 (drawsegs) 4 [ 3]
[3339 1594 3339 228 
] dogrey 
 (drawsegs) 4 [ 3]
[3537 1594 3537 228 
] dogrey 
 (drawsegs) 4 [ 3]
[3677 1594 3677 228 
] dogrey 
 (drawsegs) 4 [ 3]
[3786 1594 3786 228 
] dogrey 
 (drawsegs) 4 [ 3]
[3875 1594 3875 228 
] dogrey 
 (drawsegs) 4 [ 3]
[3951 1594 3951 228 
] dogrey 
 (drawsegs) 4 [ 3]
[4016 1594 4016 228 
] dogrey 
 (drawsegs) 4 [ 3]
[4074 1594 4074 228 
] dogrey 
 (drawsegs) 4 [ 3]
[4125 1594 4125 228 
] dogrey 
 (drawsegs) 4 [ 3]
[4464 1594 4464 228 
] dogrey 
 (drawsegs) 4 [ 3]
[4662 1594 4662 228 
] dogrey 
 (drawsegs) 4 [ 3]
[4802 1594 4802 228 
] dogrey 
 (drawsegs) 4 [ 3]
[4911 1594 4911 228 
] dogrey 
 (drawsegs) 4 [ 3]
[5000 1594 5000 228 
] dogrey 
 (drawsegs) 4 [ 3]
[5076 1594 5076 228 
] dogrey 
 (drawsegs) 4 [ 3]
[5141 1594 5141 228 
] dogrey 
 (drawsegs) 4 [ 3]
[5199 1594 5199 228 
] dogrey 
[] 0 setdash
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[750 1594 5250 1594 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1366 5250 1366 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1139 5250 1139 
] dogrey 
 (drawsegs) 4 [ 3]
[750 911 5250 911 
] dogrey 
 (drawsegs) 4 [ 3]
[750 683 5250 683 
] dogrey 
 (drawsegs) 4 [ 3]
[750 455 5250 455 
] dogrey 
 (drawsegs) 4 [ 3]
[750 228 5250 228 
] dogrey 
[] 0 setdash
0 Setcolor
5 Thickness
[] 0 setdash
750 228 4500 1366 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 802 [ 0]
[750 374 761 376 773 378 784 379 795 381 806 383 818 385 829 387 840 388 851 390 
863 392 874 394 885 396 896 398 908 399 919 401 930 403 941 405 953 407 964 408 
975 410 986 412 998 414 1009 416 1020 418 1031 419 1043 421 1054 423 1065 425 1076 427 
1088 428 1099 430 1110 432 1121 434 1133 436 1144 438 1155 439 1166 441 1178 443 1189 445 
1200 447 1211 448 1223 450 1234 452 1245 454 1256 456 1268 458 1279 459 1290 461 1301 463 
1313 465 1324 467 1335 468 1346 470 1358 472 1369 474 1380 476 1391 478 1403 479 1414 481 
1425 483 1436 485 1448 487 1459 488 1470 490 1481 492 1493 494 1504 496 1515 497 1526 499 
1538 501 1549 503 1560 505 1571 506 1583 508 1594 510 1605 512 1616 514 1628 515 1639 517 
1650 519 1661 521 1673 523 1684 524 1695 526 1706 528 1718 530 1729 532 1740 533 1751 535 
1763 537 1774 539 1785 540 1796 542 1808 544 1819 546 1830 548 1841 549 1853 551 1864 553 
1875 555 1886 556 1898 558 1909 560 1920 562 1931 564 1943 565 1954 567 1965 569 1976 571 
1988 572 1999 574 2010 576 2021 578 2033 579 2044 581 2055 583 2066 585 2078 586 2089 588 
2100 590 2111 592 2123 593 2134 595 2145 597 2156 599 2168 601 2179 602 2190 604 2201 606 
2213 608 2224 609 2235 611 2246 613 2258 615 2269 616 2280 618 2291 620 2303 622 2314 624 
2325 625 2336 627 2348 629 2359 631 2370 632 2381 634 2393 636 2404 638 2415 640 2426 641 
2438 643 2449 645 2460 647 2471 649 2483 650 2494 652 2505 654 2516 656 2528 658 2539 659 
2550 661 2561 663 2573 665 2584 667 2595 668 2606 670 2618 672 2629 674 2640 676 2651 678 
2663 680 2674 681 2685 683 2696 685 2708 687 2719 689 2730 691 2741 693 2753 694 2764 696 
2775 698 2786 700 2798 702 2809 704 2820 706 2831 708 2843 710 2854 711 2865 713 2876 715 
2888 717 2899 719 2910 721 2921 723 2933 725 2944 727 2955 729 2966 731 2978 733 2989 735 
3000 737 3011 739 3023 741 3034 743 3045 745 3056 747 3068 750 3079 752 3090 754 3101 757 
3113 759 3124 761 3135 764 3146 766 3158 769 3169 771 3180 774 3191 776 3203 779 3214 781 
3225 783 3236 786 3248 787 3259 789 3270 791 3281 792 3293 793 3304 794 3315 794 3326 794 
3338 794 3349 792 3360 790 3371 786 3383 781 3394 773 3405 760 3416 741 3428 745 3439 772 
3450 793 3461 809 3473 823 3484 834 3495 845 3506 854 3518 863 3529 871 3540 878 3551 885 
3563 892 3574 898 3585 904 3596 910 3608 915 3619 920 3630 925 3641 930 3653 935 3664 939 
3675 943 3686 947 3698 951 3709 955 3720 959 3731 963 3743 966 3754 970 3765 973 3776 976 
3788 980 3799 983 3810 986 3821 989 3833 992 3844 995 3855 998 3866 1001 3878 1004 3889 1007 
3900 1010 3911 1013 3923 1016 3934 1019 3945 1022 3956 1024 3968 1027 3979 1030 3990 1033 4001 1036 
4013 1038 4024 1041 4035 1044 4046 1047 4058 1050 4069 1052 4080 1055 4091 1058 4103 1061 4114 1064 
4125 1066 4136 1069 4148 1072 4159 1075 4170 1077 4181 1080 4193 1083 4204 1086 4215 1088 4226 1091 
4238 1094 4249 1097 4260 1099 4271 1102 4283 1105 4294 1108 4305 1110 4316 1113 4328 1116 4339 1119 
4350 1121 4361 1124 4373 1127 4384 1130 4395 1132 4406 1135 4418 1138 4429 1140 4440 1143 4451 1146 
4463 1149 4474 1151 4485 1154 4496 1157 4508 1160 4519 1162 4530 1165 4541 1168 4553 1171 4564 1173 
4575 1176 4586 1179 4598 1182 4609 1184 4620 1187 4631 1190 4643 1192 4654 1195 4665 1198 4676 1201 
4688 1203 4699 1206 4710 1209 4721 1212 4733 1214 4744 1217 4755 1220 4766 1223 4778 1225 4789 1228 
4800 1231 4811 1233 4823 1236 4834 1239 4845 1242 4856 1244 4868 1247 4879 1250 4890 1253 4901 1255 
4913 1258 4924 1261 4935 1264 4946 1266 4958 1269 4969 1272 4980 1274 4991 1277 5003 1280 5014 1283 
5025 1285 5036 1288 5048 1291 5059 1294 5070 1296 5081 1299 5093 1302 5104 1305 5115 1307 5126 1310 
5138 1313 5149 1315 5160 1318 5171 1321 5183 1324 5194 1326 5205 1329 5216 1332 5228 1335 5239 1337 
5245 1339 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
750 228 4500 1366 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 802 [ 0]
[750 411 761 414 773 417 784 419 795 422 806 425 818 428 829 430 840 433 851 436 
863 439 874 441 885 444 896 447 908 450 919 453 930 455 941 458 953 461 964 464 
975 467 986 469 998 472 1009 475 1020 478 1031 481 1043 483 1054 486 1065 489 1076 492 
1088 495 1099 498 1110 500 1121 503 1133 506 1144 509 1155 512 1166 515 1178 518 1189 521 
1200 523 1211 526 1223 529 1234 532 1245 535 1256 538 1268 541 1279 544 1290 547 1301 550 
1313 553 1324 556 1335 559 1346 562 1358 565 1369 568 1380 571 1391 574 1403 577 1414 580 
1425 583 1436 586 1448 589 1459 592 1470 595 1481 598 1493 601 1504 604 1515 607 1526 610 
1538 613 1549 616 1560 618 1571 621 1583 624 1594 626 1605 629 1616 631 1628 633 1639 635 
1650 637 1661 639 1673 641 1684 643 1695 644 1706 646 1718 647 1729 648 1740 649 1751 650 
1763 651 1774 652 1785 653 1796 654 1808 654 1819 655 1830 655 1841 656 1853 657 1864 657 
1875 658 1886 658 1898 659 1909 659 1920 660 1931 661 1943 661 1954 662 1965 662 1976 663 
1988 663 1999 664 2010 665 2021 665 2033 666 2044 667 2055 667 2066 668 2078 668 2089 669 
2100 670 2111 670 2123 671 2134 672 2145 673 2156 673 2168 674 2179 675 2190 675 2201 676 
2213 677 2224 678 2235 678 2246 679 2258 680 2269 681 2280 681 2291 682 2303 683 2314 684 
2325 685 2336 686 2348 686 2359 687 2370 688 2381 689 2393 690 2404 691 2415 691 2426 692 
2438 693 2449 694 2460 695 2471 696 2483 697 2494 698 2505 699 2516 699 2528 700 2539 701 
2550 702 2561 703 2573 704 2584 705 2595 706 2606 707 2618 708 2629 709 2640 710 2651 711 
2663 712 2674 713 2685 714 2696 715 2708 716 2719 717 2730 718 2741 720 2753 721 2764 722 
2775 723 2786 724 2798 725 2809 726 2820 727 2831 729 2843 730 2854 731 2865 732 2876 734 
2888 735 2899 736 2910 737 2921 739 2933 740 2944 741 2955 743 2966 744 2978 745 2989 747 
3000 748 3011 750 3023 751 3034 753 3045 755 3056 756 3068 758 3079 760 3090 762 3101 763 
3113 765 3124 767 3135 769 3146 772 3158 774 3169 776 3180 778 3191 780 3203 782 3214 784 
3225 786 3236 788 3248 790 3259 791 3270 793 3281 794 3293 795 3304 795 3315 796 3326 795 
3338 795 3349 793 3360 791 3371 787 3383 782 3394 773 3405 760 3416 742 3428 746 3439 773 
3450 794 3461 810 3473 823 3484 835 3495 845 3506 855 3518 864 3529 872 3540 879 3551 886 
3563 893 3574 899 3585 905 3596 911 3608 917 3619 922 3630 927 3641 932 3653 937 3664 942 
3675 946 3686 950 3698 954 3709 958 3720 962 3731 966 3743 970 3754 974 3765 977 3776 981 
3788 984 3799 987 3810 991 3821 994 3833 997 3844 1001 3855 1004 3866 1007 3878 1010 3889 1013 
3900 1016 3911 1019 3923 1022 3934 1025 3945 1028 3956 1031 3968 1034 3979 1037 3990 1040 4001 1043 
4013 1046 4024 1049 4035 1052 4046 1055 4058 1058 4069 1061 4080 1064 4091 1067 4103 1069 4114 1072 
4125 1075 4136 1078 4148 1081 4159 1084 4170 1087 4181 1089 4193 1092 4204 1095 4215 1098 4226 1101 
4238 1104 4249 1106 4260 1109 4271 1112 4283 1115 4294 1118 4305 1120 4316 1123 4328 1126 4339 1129 
4350 1132 4361 1134 4373 1137 4384 1140 4395 1143 4406 1146 4418 1148 4429 1151 4440 1154 4451 1157 
4463 1159 4474 1162 4485 1165 4496 1168 4508 1170 4519 1173 4530 1176 4541 1179 4553 1181 4564 1184 
4575 1187 4586 1190 4598 1193 4609 1195 4620 1198 4631 1201 4643 1204 4654 1206 4665 1209 4676 1212 
4688 1215 4699 1217 4710 1220 4721 1223 4733 1225 4744 1228 4755 1231 4766 1234 4778 1236 4789 1239 
4800 1242 4811 1245 4823 1247 4834 1250 4845 1253 4856 1256 4868 1258 4879 1261 4890 1264 4901 1267 
4913 1269 4924 1272 4935 1275 4946 1278 4958 1280 4969 1283 4980 1286 4991 1289 5003 1291 5014 1294 
5025 1297 5036 1299 5048 1302 5059 1305 5070 1308 5081 1310 5093 1313 5104 1316 5115 1319 5126 1321 
5138 1324 5149 1327 5160 1330 5171 1332 5183 1335 5194 1338 5205 1340 5216 1343 5228 1346 5239 1349 
5245 1350 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
750 228 4500 1366 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 802 [ 0]
[750 683 761 683 773 683 784 683 795 683 806 683 818 683 829 683 840 683 851 683 
863 683 874 683 885 683 896 683 908 683 919 683 930 683 941 683 953 683 964 683 
975 683 986 683 998 683 1009 683 1020 683 1031 683 1043 683 1054 683 1065 683 1076 683 
1088 683 1099 683 1110 683 1121 683 1133 683 1144 683 1155 683 1166 683 1178 683 1189 683 
1200 683 1211 683 1223 683 1234 683 1245 683 1256 683 1268 683 1279 683 1290 683 1301 683 
1313 683 1324 683 1335 682 1346 682 1358 682 1369 682 1380 682 1391 682 1403 682 1414 682 
1425 681 1436 681 1448 681 1459 681 1470 680 1481 680 1493 680 1504 679 1515 679 1526 678 
1538 678 1549 677 1560 676 1571 676 1583 675 1594 674 1605 673 1616 672 1628 671 1639 670 
1650 669 1661 668 1673 667 1684 666 1695 665 1706 664 1718 664 1729 663 1740 663 1751 663 
1763 663 1774 663 1785 664 1796 664 1808 665 1819 665 1830 666 1841 666 1853 667 1864 667 
1875 668 1886 668 1898 669 1909 669 1920 670 1931 670 1943 671 1954 671 1965 671 1976 672 
1988 672 1999 672 2010 673 2021 673 2033 673 2044 674 2055 674 2066 674 2078 674 2089 675 
2100 675 2111 675 2123 675 2134 675 2145 676 2156 676 2168 676 2179 676 2190 676 2201 676 
2213 676 2224 677 2235 677 2246 677 2258 677 2269 677 2280 677 2291 677 2303 678 2314 678 
2325 678 2336 678 2348 678 2359 678 2370 679 2381 679 2393 679 2404 679 2415 679 2426 680 
2438 680 2449 680 2460 681 2471 681 2483 681 2494 682 2505 682 2516 683 2528 683 2539 684 
2550 684 2561 685 2573 685 2584 686 2595 687 2606 688 2618 689 2629 689 2640 690 2651 691 
2663 692 2674 694 2685 695 2696 696 2708 697 2719 698 2730 700 2741 701 2753 703 2764 704 
2775 706 2786 707 2798 709 2809 710 2820 712 2831 714 2843 715 2854 717 2865 719 2876 720 
2888 722 2899 724 2910 726 2921 728 2933 729 2944 731 2955 733 2966 735 2978 737 2989 739 
3000 741 3011 743 3023 745 3034 747 3045 749 3056 751 3068 754 3079 756 3090 759 3101 762 
3113 765 3124 768 3135 771 3146 774 3158 778 3169 781 3180 784 3191 788 3203 791 3214 794 
3225 796 3236 798 3248 800 3259 802 3270 804 3281 805 3293 805 3304 806 3315 806 3326 805 
3338 805 3349 806 3360 807 3371 810 3383 814 3394 820 3405 827 3416 835 3428 842 3439 850 
3450 857 3461 864 3473 871 3484 878 3495 884 3506 890 3518 896 3529 902 3540 907 3551 913 
3563 918 3574 923 3585 928 3596 933 3608 937 3619 942 3630 946 3641 951 3653 955 3664 959 
3675 964 3686 968 3698 972 3709 976 3720 980 3731 984 3743 988 3754 992 3765 996 3776 999 
3788 1003 3799 1007 3810 1010 3821 1014 3833 1018 3844 1021 3855 1025 3866 1028 3878 1032 3889 1035 
3900 1039 3911 1042 3923 1045 3934 1049 3945 1052 3956 1056 3968 1059 3979 1062 3990 1065 4001 1069 
4013 1072 4024 1075 4035 1078 4046 1081 4058 1085 4069 1088 4080 1091 4091 1094 4103 1097 4114 1100 
4125 1103 4136 1106 4148 1109 4159 1112 4170 1115 4181 1119 4193 1122 4204 1125 4215 1128 4226 1130 
4238 1133 4249 1136 4260 1139 4271 1142 4283 1145 4294 1148 4305 1151 4316 1154 4328 1157 4339 1160 
4350 1163 4361 1166 4373 1168 4384 1171 4395 1174 4406 1177 4418 1180 4429 1183 4440 1186 4451 1188 
4463 1191 4474 1194 4485 1197 4496 1200 4508 1203 4519 1205 4530 1208 4541 1211 4553 1214 4564 1217 
4575 1219 4586 1222 4598 1225 4609 1228 4620 1231 4631 1233 4643 1236 4654 1239 4665 1242 4676 1244 
4688 1247 4699 1250 4710 1253 4721 1256 4733 1258 4744 1261 4755 1264 4766 1267 4778 1269 4789 1272 
4800 1275 4811 1278 4823 1280 4834 1283 4845 1286 4856 1289 4868 1291 4879 1294 4890 1297 4901 1300 
4913 1302 4924 1305 4935 1308 4946 1311 4958 1313 4969 1316 4980 1319 4991 1322 5003 1324 5014 1327 
5025 1330 5036 1333 5048 1335 5059 1338 5070 1341 5081 1344 5093 1346 5104 1349 5115 1352 5126 1355 
5138 1357 5149 1360 5160 1363 5171 1366 5183 1368 5194 1371 5205 1374 5216 1376 5228 1379 5239 1382 
5245 1383 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
(-2) 715 1696 0  0.00 [715 1616 71 79] Show
%Latex:\myput{715}{2764}{4}{-2}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 604 1792 0  0.00 [604 1692 111 99] Show
%Latex:\myput{604}{2668}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1594 750 1621 
] dogrey 
32 Setcolor
32 Setcolor
(-1) 1840 1696 0  0.00 [1840 1616 71 79] Show
%Latex:\myput{1840}{2764}{4}{-1}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 1729 1792 0  0.00 [1729 1692 111 99] Show
%Latex:\myput{1729}{2668}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[1875 1594 1875 1621 
] dogrey 
32 Setcolor
32 Setcolor
(0) 2978 1696 0  0.00 [2978 1616 44 79] Show
%Latex:\myput{2978}{2764}{4}{0}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 2867 1792 0  0.00 [2867 1692 111 99] Show
%Latex:\myput{2867}{2668}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[3000 1594 3000 1621 
] dogrey 
32 Setcolor
32 Setcolor
(1) 4103 1696 0  0.00 [4103 1616 44 79] Show
%Latex:\myput{4103}{2764}{4}{1}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 3992 1792 0  0.00 [3992 1692 111 99] Show
%Latex:\myput{3992}{2668}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[4125 1594 4125 1621 
] dogrey 
32 Setcolor
32 Setcolor
(2) 5228 1696 0  0.00 [5228 1616 44 79] Show
%Latex:\myput{5228}{2764}{4}{2}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 5117 1792 0  0.00 [5117 1692 111 99] Show
%Latex:\myput{5117}{2668}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[5250 1594 5250 1621 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1594 750 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[1089 1594 1089 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[1287 1594 1287 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[1427 1594 1427 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[1536 1594 1536 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[1625 1594 1625 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[1701 1594 1701 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[1766 1594 1766 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[1824 1594 1824 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[1875 1594 1875 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[2214 1594 2214 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[2412 1594 2412 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[2552 1594 2552 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[2661 1594 2661 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[2750 1594 2750 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[2826 1594 2826 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[2891 1594 2891 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[2949 1594 2949 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[3000 1594 3000 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[3339 1594 3339 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[3537 1594 3537 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[3677 1594 3677 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[3786 1594 3786 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[3875 1594 3875 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[3951 1594 3951 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[4016 1594 4016 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[4074 1594 4074 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[4125 1594 4125 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[4464 1594 4464 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[4662 1594 4662 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[4802 1594 4802 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[4911 1594 4911 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[5000 1594 5000 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[5076 1594 5076 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[5141 1594 5141 1614 
] dogrey 
 (drawsegs) 4 [ 32]
[5199 1594 5199 1614 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-200) 478 1632 0  0.00 [478 1532 200 99] Show
%Latex:\myput{478}{2828}{5}{-200}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1594 690 1594 
] dogrey 
32 Setcolor
32 Setcolor
(-150) 478 1404 0  0.00 [478 1304 200 99] Show
%Latex:\myput{478}{3056}{5}{-150}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1366 690 1366 
] dogrey 
32 Setcolor
32 Setcolor
(-100) 478 1177 0  0.00 [478 1077 200 99] Show
%Latex:\myput{478}{3283}{5}{-100}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1139 690 1139 
] dogrey 
32 Setcolor
32 Setcolor
(-50) 534 949 0  0.00 [534 849 144 99] Show
%Latex:\myput{534}{3511}{5}{-50}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 911 690 911 
] dogrey 
32 Setcolor
32 Setcolor
(0) 623 721 0  0.00 [623 621 55 99] Show
%Latex:\myput{623}{3739}{5}{0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 683 690 683 
] dogrey 
32 Setcolor
32 Setcolor
(50) 567 493 0  0.00 [567 393 111 99] Show
%Latex:\myput{567}{3967}{5}{50}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 455 690 455 
] dogrey 
32 Setcolor
32 Setcolor
(100) 512 266 0  0.00 [512 166 166 99] Show
%Latex:\myput{512}{4194}{5}{100}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 228 690 228 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1594 705 1594 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1537 705 1537 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1480 705 1480 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1423 705 1423 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1366 705 1366 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1309 705 1309 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1253 705 1253 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1196 705 1196 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1139 705 1139 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1082 705 1082 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1025 705 1025 
] dogrey 
 (drawsegs) 4 [ 32]
[750 968 705 968 
] dogrey 
 (drawsegs) 4 [ 32]
[750 911 705 911 
] dogrey 
 (drawsegs) 4 [ 32]
[750 854 705 854 
] dogrey 
 (drawsegs) 4 [ 32]
[750 797 705 797 
] dogrey 
 (drawsegs) 4 [ 32]
[750 740 705 740 
] dogrey 
 (drawsegs) 4 [ 32]
[750 683 705 683 
] dogrey 
 (drawsegs) 4 [ 32]
[750 626 705 626 
] dogrey 
 (drawsegs) 4 [ 32]
[750 569 705 569 
] dogrey 
 (drawsegs) 4 [ 32]
[750 512 705 512 
] dogrey 
 (drawsegs) 4 [ 32]
[750 455 705 455 
] dogrey 
 (drawsegs) 4 [ 32]
[750 399 705 399 
] dogrey 
 (drawsegs) 4 [ 32]
[750 342 705 342 
] dogrey 
 (drawsegs) 4 [ 32]
[750 285 705 285 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1594 5250 1594 
] dogrey 
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1594 750 228 
] dogrey 
32 Setcolor
 (drawbox) 4 [ 0]
[750 228 4500 1366 
] dogrey 
32 Setcolor
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Magnitude ) 2752 141 0  0.00 [2752 41 494 99] Show
%Latex:\myput{2752}{4319}{5}{Magnitude }
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
( Hz) 2925 1975 0  0.00 [2925 1875 150 99] Show
%Latex:\myput{2925}{2485}{5}{ Hz}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(db) 451 945 0 270.00 [451 845 111 99] Show
%Latex:\myput{451}{3515}{5}{db}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
5 Thickness
750 2146 4500 1366 setclipzone
-1 -1 200000 200000 setclipzone
[] 0 setdash
32 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[750 2146 750 3512 5250 3512 5250 2146 750 2146 
] dogrey 
33 Setcolor
/absolu true def
32 Setcolor
[] 0 setdash
32 Setcolor
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[750 3512 750 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[1875 3512 1875 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[3000 3512 3000 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[4125 3512 4125 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[5250 3512 5250 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3512 750 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[1089 3512 1089 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[1287 3512 1287 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[1427 3512 1427 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[1536 3512 1536 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[1625 3512 1625 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[1701 3512 1701 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[1766 3512 1766 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[1824 3512 1824 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[1875 3512 1875 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[2214 3512 2214 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[2412 3512 2412 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[2552 3512 2552 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[2661 3512 2661 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[2750 3512 2750 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[2826 3512 2826 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[2891 3512 2891 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[2949 3512 2949 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[3000 3512 3000 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[3339 3512 3339 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[3537 3512 3537 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[3677 3512 3677 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[3786 3512 3786 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[3875 3512 3875 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[3951 3512 3951 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[4016 3512 4016 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[4074 3512 4074 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[4125 3512 4125 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[4464 3512 4464 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[4662 3512 4662 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[4802 3512 4802 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[4911 3512 4911 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[5000 3512 5000 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[5076 3512 5076 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[5141 3512 5141 2146 
] dogrey 
 (drawsegs) 4 [ 3]
[5199 3512 5199 2146 
] dogrey 
[] 0 setdash
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[750 3512 5250 3512 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3284 5250 3284 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3056 5250 3056 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2829 5250 2829 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2601 5250 2601 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2373 5250 2373 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2146 5250 2146 
] dogrey 
[] 0 setdash
0 Setcolor
5 Thickness
[] 0 setdash
750 2146 4500 1366 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 802 [ 0]
[750 2829 761 2829 773 2829 784 2829 795 2829 806 2829 818 2829 829 2829 840 2829 851 2829 
863 2829 874 2829 885 2829 896 2829 908 2829 919 2829 930 2829 941 2829 953 2829 964 2829 
975 2829 986 2829 998 2829 1009 2829 1020 2829 1031 2829 1043 2829 1054 2829 1065 2829 1076 2829 
1088 2829 1099 2829 1110 2829 1121 2829 1133 2829 1144 2829 1155 2829 1166 2829 1178 2829 1189 2829 
1200 2829 1211 2829 1223 2829 1234 2829 1245 2829 1256 2829 1268 2829 1279 2829 1290 2829 1301 2829 
1313 2829 1324 2829 1335 2829 1346 2829 1358 2829 1369 2829 1380 2829 1391 2829 1403 2829 1414 2829 
1425 2829 1436 2829 1448 2829 1459 2829 1470 2829 1481 2829 1493 2829 1504 2829 1515 2829 1526 2829 
1538 2829 1549 2829 1560 2829 1571 2829 1583 2829 1594 2829 1605 2829 1616 2829 1628 2830 1639 2830 
1650 2830 1661 2830 1673 2830 1684 2830 1695 2830 1706 2830 1718 2830 1729 2830 1740 2830 1751 2830 
1763 2830 1774 2830 1785 2831 1796 2831 1808 2831 1819 2831 1830 2831 1841 2831 1853 2831 1864 2831 
1875 2832 1886 2832 1898 2832 1909 2832 1920 2832 1931 2833 1943 2833 1954 2833 1965 2833 1976 2833 
1988 2834 1999 2834 2010 2834 2021 2835 2033 2835 2044 2835 2055 2836 2066 2836 2078 2836 2089 2837 
2100 2837 2111 2837 2123 2838 2134 2838 2145 2839 2156 2839 2168 2840 2179 2840 2190 2841 2201 2841 
2213 2842 2224 2842 2235 2843 2246 2843 2258 2844 2269 2845 2280 2845 2291 2846 2303 2847 2314 2847 
2325 2848 2336 2849 2348 2849 2359 2850 2370 2851 2381 2852 2393 2853 2404 2854 2415 2854 2426 2855 
2438 2856 2449 2857 2460 2858 2471 2859 2483 2860 2494 2861 2505 2862 2516 2863 2528 2864 2539 2865 
2550 2866 2561 2868 2573 2869 2584 2870 2595 2871 2606 2872 2618 2874 2629 2875 2640 2876 2651 2878 
2663 2879 2674 2880 2685 2882 2696 2883 2708 2885 2719 2886 2730 2888 2741 2889 2753 2891 2764 2893 
2775 2894 2786 2896 2798 2898 2809 2900 2820 2901 2831 2903 2843 2905 2854 2907 2865 2909 2876 2911 
2888 2913 2899 2915 2910 2917 2921 2920 2933 2922 2944 2924 2955 2927 2966 2929 2978 2931 2989 2934 
3000 2937 3011 2939 3023 2942 3034 2945 3045 2948 3056 2951 3068 2954 3079 2957 3090 2960 3101 2963 
3113 2965 3124 2968 3135 2971 3146 2973 3158 2975 3169 2977 3180 2978 3191 2979 3203 2980 3214 2980 
3225 2981 3236 2980 3248 2980 3259 2979 3270 2978 3281 2977 3293 2976 3304 2975 3315 2974 3326 2973 
3338 2972 3349 2971 3360 2971 3371 2972 3383 2975 3394 2983 3405 3003 3416 3067 3428 3206 3439 3269 
3450 3289 3461 3295 3473 3297 3484 3296 3495 3293 3506 3290 3518 3286 3529 3281 3540 3276 3551 3271 
3563 3265 3574 3259 3585 3253 3596 3247 3608 3241 3619 3235 3630 3229 3641 3223 3653 3217 3664 3211 
3675 3205 3686 3199 3698 3194 3709 3189 3720 3183 3731 3178 3743 3173 3754 3169 3765 3164 3776 3160 
3788 3156 3799 3152 3810 3148 3821 3144 3833 3141 3844 3138 3855 3134 3866 3131 3878 3128 3889 3125 
3900 3123 3911 3120 3923 3117 3934 3115 3945 3113 3956 3110 3968 3108 3979 3106 3990 3104 4001 3102 
4013 3100 4024 3098 4035 3097 4046 3095 4058 3093 4069 3092 4080 3090 4091 3089 4103 3087 4114 3086 
4125 3085 4136 3083 4148 3082 4159 3081 4170 3080 4181 3078 4193 3077 4204 3076 4215 3075 4226 3074 
4238 3073 4249 3072 4260 3071 4271 3070 4283 3069 4294 3069 4305 3068 4316 3067 4328 3066 4339 3065 
4350 3065 4361 3064 4373 3063 4384 3062 4395 3062 4406 3061 4418 3060 4429 3060 4440 3059 4451 3059 
4463 3058 4474 3057 4485 3057 4496 3056 4508 3056 4519 3055 4530 3055 4541 3054 4553 3054 4564 3053 
4575 3053 4586 3052 4598 3052 4609 3052 4620 3051 4631 3051 4643 3050 4654 3050 4665 3050 4676 3049 
4688 3049 4699 3049 4710 3048 4721 3048 4733 3048 4744 3047 4755 3047 4766 3047 4778 3046 4789 3046 
4800 3046 4811 3045 4823 3045 4834 3045 4845 3045 4856 3044 4868 3044 4879 3044 4890 3044 4901 3043 
4913 3043 4924 3043 4935 3043 4946 3043 4958 3042 4969 3042 4980 3042 4991 3042 5003 3042 5014 3041 
5025 3041 5036 3041 5048 3041 5059 3041 5070 3041 5081 3040 5093 3040 5104 3040 5115 3040 5126 3040 
5138 3040 5149 3040 5160 3039 5171 3039 5183 3039 5194 3039 5205 3039 5216 3039 5228 3039 5239 3039 
5245 3039 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
750 2146 4500 1366 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 802 [ 0]
[750 2609 761 2608 773 2608 784 2608 795 2607 806 2607 818 2606 829 2606 840 2606 851 2605 
863 2605 874 2604 885 2604 896 2603 908 2603 919 2602 930 2602 941 2601 953 2600 964 2600 
975 2599 986 2599 998 2598 1009 2597 1020 2597 1031 2596 1043 2595 1054 2594 1065 2594 1076 2593 
1088 2592 1099 2591 1110 2590 1121 2589 1133 2588 1144 2587 1155 2586 1166 2585 1178 2584 1189 2583 
1200 2582 1211 2580 1223 2579 1234 2578 1245 2576 1256 2575 1268 2573 1279 2572 1290 2570 1301 2568 
1313 2566 1324 2565 1335 2563 1346 2560 1358 2558 1369 2556 1380 2553 1391 2551 1403 2548 1414 2545 
1425 2542 1436 2539 1448 2536 1459 2532 1470 2529 1481 2525 1493 2521 1504 2516 1515 2512 1526 2507 
1538 2502 1549 2497 1560 2491 1571 2485 1583 2479 1594 2473 1605 2467 1616 2460 1628 2453 1639 2446 
1650 2439 1661 2432 1673 2425 1684 2418 1695 2411 1706 2405 1718 2398 1729 2391 1740 2385 1751 2379 
1763 2373 1774 2368 1785 2363 1796 2358 1808 2353 1819 2349 1830 2344 1841 2340 1853 2337 1864 2333 
1875 2330 1886 2327 1898 2324 1909 2321 1920 2319 1931 2317 1943 2315 1954 2313 1965 2311 1976 2309 
1988 2307 1999 2306 2010 2305 2021 2304 2033 2302 2044 2301 2055 2301 2066 2300 2078 2299 2089 2298 
2100 2298 2111 2297 2123 2297 2134 2297 2145 2297 2156 2297 2168 2297 2179 2297 2190 2297 2201 2297 
2213 2297 2224 2297 2235 2298 2246 2298 2258 2299 2269 2299 2280 2300 2291 2301 2303 2301 2314 2302 
2325 2303 2336 2304 2348 2305 2359 2306 2370 2307 2381 2308 2393 2310 2404 2311 2415 2312 2426 2314 
2438 2315 2449 2317 2460 2318 2471 2320 2483 2322 2494 2324 2505 2326 2516 2327 2528 2329 2539 2332 
2550 2334 2561 2336 2573 2338 2584 2340 2595 2343 2606 2345 2618 2348 2629 2350 2640 2353 2651 2356 
2663 2358 2674 2361 2685 2364 2696 2367 2708 2370 2719 2374 2730 2377 2741 2380 2753 2384 2764 2387 
2775 2391 2786 2394 2798 2398 2809 2402 2820 2406 2831 2410 2843 2414 2854 2418 2865 2422 2876 2426 
2888 2431 2899 2435 2910 2440 2921 2445 2933 2449 2944 2454 2955 2459 2966 2465 2978 2470 2989 2475 
3000 2481 3011 2486 3023 2492 3034 2498 3045 2504 3056 2510 3068 2516 3079 2522 3090 2528 3101 2534 
3113 2540 3124 2546 3135 2552 3146 2558 3158 2563 3169 2569 3180 2574 3191 2578 3203 2583 3214 2587 
3225 2591 3236 2594 3248 2597 3259 2601 3270 2603 3281 2606 3293 2609 3304 2612 3315 2614 3326 2617 
3338 2620 3349 2623 3360 2627 3371 2632 3383 2639 3394 2651 3405 2675 3416 2743 3428 2886 3439 2954 
3450 2977 3461 2988 3473 2993 3484 2996 3495 2998 3506 2998 3518 2998 3529 2997 3540 2996 3551 2995 
3563 2993 3574 2992 3585 2990 3596 2987 3608 2985 3619 2983 3630 2981 3641 2979 3653 2976 3664 2974 
3675 2972 3686 2971 3698 2969 3709 2967 3720 2966 3731 2964 3743 2963 3754 2962 3765 2961 3776 2960 
3788 2960 3799 2959 3810 2959 3821 2959 3833 2959 3844 2959 3855 2959 3866 2959 3878 2959 3889 2959 
3900 2960 3911 2960 3923 2961 3934 2961 3945 2962 3956 2963 3968 2963 3979 2964 3990 2965 4001 2966 
4013 2967 4024 2967 4035 2968 4046 2969 4058 2970 4069 2971 4080 2972 4091 2973 4103 2974 4114 2975 
4125 2976 4136 2977 4148 2978 4159 2979 4170 2980 4181 2981 4193 2982 4204 2983 4215 2984 4226 2985 
4238 2986 4249 2986 4260 2987 4271 2988 4283 2989 4294 2990 4305 2991 4316 2992 4328 2993 4339 2993 
4350 2994 4361 2995 4373 2996 4384 2997 4395 2997 4406 2998 4418 2999 4429 3000 4440 3000 4451 3001 
4463 3002 4474 3002 4485 3003 4496 3004 4508 3004 4519 3005 4530 3006 4541 3006 4553 3007 4564 3007 
4575 3008 4586 3009 4598 3009 4609 3010 4620 3010 4631 3011 4643 3011 4654 3012 4665 3012 4676 3013 
4688 3013 4699 3014 4710 3014 4721 3015 4733 3015 4744 3015 4755 3016 4766 3016 4778 3017 4789 3017 
4800 3017 4811 3018 4823 3018 4834 3018 4845 3019 4856 3019 4868 3019 4879 3020 4890 3020 4901 3020 
4913 3021 4924 3021 4935 3021 4946 3022 4958 3022 4969 3022 4980 3022 4991 3023 5003 3023 5014 3023 
5025 3023 5036 3024 5048 3024 5059 3024 5070 3024 5081 3024 5093 3025 5104 3025 5115 3025 5126 3025 
5138 3025 5149 3026 5160 3026 5171 3026 5183 3026 5194 3026 5205 3027 5216 3027 5228 3027 5239 3027 
5245 3027 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
750 2146 4500 1366 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 802 [ 0]
[750 2829 761 2829 773 2829 784 2829 795 2829 806 2829 818 2829 829 2829 840 2829 851 2829 
863 2828 874 2828 885 2828 896 2828 908 2828 919 2828 930 2828 941 2828 953 2828 964 2828 
975 2828 986 2828 998 2828 1009 2828 1020 2828 1031 2828 1043 2828 1054 2828 1065 2828 1076 2828 
1088 2828 1099 2828 1110 2828 1121 2827 1133 2827 1144 2827 1155 2827 1166 2827 1178 2827 1189 2827 
1200 2827 1211 2826 1223 2826 1234 2826 1245 2826 1256 2826 1268 2825 1279 2825 1290 2825 1301 2825 
1313 2824 1324 2824 1335 2824 1346 2823 1358 2823 1369 2822 1380 2822 1391 2822 1403 2821 1414 2821 
1425 2820 1436 2819 1448 2819 1459 2818 1470 2818 1481 2817 1493 2816 1504 2816 1515 2815 1526 2814 
1538 2814 1549 2813 1560 2813 1571 2813 1583 2813 1594 2813 1605 2813 1616 2814 1628 2816 1639 2817 
1650 2819 1661 2822 1673 2825 1684 2829 1695 2833 1706 2838 1718 2843 1729 2847 1740 2852 1751 2857 
1763 2862 1774 2867 1785 2871 1796 2875 1808 2878 1819 2882 1830 2885 1841 2888 1853 2891 1864 2893 
1875 2895 1886 2898 1898 2900 1909 2902 1920 2903 1931 2905 1943 2907 1954 2909 1965 2910 1976 2912 
1988 2914 1999 2915 2010 2917 2021 2919 2033 2920 2044 2922 2055 2924 2066 2925 2078 2927 2089 2929 
2100 2931 2111 2933 2123 2935 2134 2937 2145 2939 2156 2941 2168 2943 2179 2945 2190 2947 2201 2950 
2213 2952 2224 2955 2235 2957 2246 2960 2258 2963 2269 2966 2280 2968 2291 2971 2303 2974 2314 2978 
2325 2981 2336 2984 2348 2988 2359 2991 2370 2995 2381 2999 2393 3003 2404 3007 2415 3011 2426 3015 
2438 3020 2449 3024 2460 3029 2471 3034 2483 3039 2494 3044 2505 3049 2516 3054 2528 3060 2539 3065 
2550 3071 2561 3076 2573 3082 2584 3088 2595 3094 2606 3100 2618 3106 2629 3112 2640 3119 2651 3125 
2663 3131 2674 3138 2685 3144 2696 3150 2708 3157 2719 3163 2730 3169 2741 3176 2753 3182 2764 3188 
2775 3194 2786 3201 2798 3207 2809 3213 2820 3219 2831 3225 2843 3231 2854 3237 2865 3243 2876 3249 
2888 3255 2899 3261 2910 3267 2921 3273 2933 3279 2944 3285 2955 3291 2966 3297 2978 3303 2989 3309 
3000 3316 3011 3322 3023 3329 3034 3336 3045 3342 3056 3349 3068 3356 3079 3363 3090 3369 3101 3376 
3113 3382 3124 3387 3135 3392 3146 3396 3158 3399 3169 3402 3180 3403 3191 3403 3203 3402 3214 3400 
3225 3397 3236 3393 3248 3389 3259 3383 3270 3376 3281 3367 3293 3357 3304 3346 3315 3332 3326 3315 
3338 3295 3349 3271 3360 3243 3371 3213 3383 3182 3394 3154 3405 3130 3416 3109 3428 3092 3439 3078 
3450 3067 3461 3057 3473 3048 3484 3041 3495 3035 3506 3029 3518 3024 3529 3019 3540 3015 3551 3012 
3563 3008 3574 3005 3585 3003 3596 3000 3608 2998 3619 2996 3630 2994 3641 2992 3653 2990 3664 2989 
3675 2988 3686 2987 3698 2986 3709 2985 3720 2984 3731 2983 3743 2982 3754 2982 3765 2981 3776 2981 
3788 2981 3799 2981 3810 2980 3821 2980 3833 2980 3844 2980 3855 2980 3866 2980 3878 2980 3889 2981 
3900 2981 3911 2981 3923 2982 3934 2982 3945 2982 3956 2983 3968 2983 3979 2984 3990 2984 4001 2984 
4013 2985 4024 2986 4035 2986 4046 2987 4058 2987 4069 2988 4080 2988 4091 2989 4103 2990 4114 2990 
4125 2991 4136 2992 4148 2992 4159 2993 4170 2994 4181 2994 4193 2995 4204 2995 4215 2996 4226 2997 
4238 2997 4249 2998 4260 2999 4271 2999 4283 3000 4294 3001 4305 3001 4316 3002 4328 3002 4339 3003 
4350 3004 4361 3004 4373 3005 4384 3005 4395 3006 4406 3006 4418 3007 4429 3008 4440 3008 4451 3009 
4463 3009 4474 3010 4485 3010 4496 3011 4508 3011 4519 3012 4530 3012 4541 3012 4553 3013 4564 3013 
4575 3014 4586 3014 4598 3015 4609 3015 4620 3015 4631 3016 4643 3016 4654 3017 4665 3017 4676 3017 
4688 3018 4699 3018 4710 3018 4721 3019 4733 3019 4744 3019 4755 3020 4766 3020 4778 3020 4789 3021 
4800 3021 4811 3021 4823 3021 4834 3022 4845 3022 4856 3022 4868 3023 4879 3023 4890 3023 4901 3023 
4913 3023 4924 3024 4935 3024 4946 3024 4958 3024 4969 3025 4980 3025 4991 3025 5003 3025 5014 3025 
5025 3026 5036 3026 5048 3026 5059 3026 5070 3026 5081 3026 5093 3027 5104 3027 5115 3027 5126 3027 
5138 3027 5149 3027 5160 3028 5171 3028 5183 3028 5194 3028 5205 3028 5216 3028 5228 3028 5239 3028 
5245 3029 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
(-2) 715 3614 0  0.00 [715 3534 71 79] Show
%Latex:\myput{715}{846}{4}{-2}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 604 3710 0  0.00 [604 3610 111 99] Show
%Latex:\myput{604}{750}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3512 750 3539 
] dogrey 
32 Setcolor
32 Setcolor
(-1) 1840 3614 0  0.00 [1840 3534 71 79] Show
%Latex:\myput{1840}{846}{4}{-1}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 1729 3710 0  0.00 [1729 3610 111 99] Show
%Latex:\myput{1729}{750}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[1875 3512 1875 3539 
] dogrey 
32 Setcolor
32 Setcolor
(0) 2978 3614 0  0.00 [2978 3534 44 79] Show
%Latex:\myput{2978}{846}{4}{0}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 2867 3710 0  0.00 [2867 3610 111 99] Show
%Latex:\myput{2867}{750}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[3000 3512 3000 3539 
] dogrey 
32 Setcolor
32 Setcolor
(1) 4103 3614 0  0.00 [4103 3534 44 79] Show
%Latex:\myput{4103}{846}{4}{1}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 3992 3710 0  0.00 [3992 3610 111 99] Show
%Latex:\myput{3992}{750}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[4125 3512 4125 3539 
] dogrey 
32 Setcolor
32 Setcolor
(2) 5228 3614 0  0.00 [5228 3534 44 79] Show
%Latex:\myput{5228}{846}{4}{2}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 5117 3710 0  0.00 [5117 3610 111 99] Show
%Latex:\myput{5117}{750}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[5250 3512 5250 3539 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3512 750 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[1089 3512 1089 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[1287 3512 1287 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[1427 3512 1427 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[1536 3512 1536 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[1625 3512 1625 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[1701 3512 1701 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[1766 3512 1766 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[1824 3512 1824 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[1875 3512 1875 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[2214 3512 2214 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[2412 3512 2412 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[2552 3512 2552 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[2661 3512 2661 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[2750 3512 2750 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[2826 3512 2826 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[2891 3512 2891 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[2949 3512 2949 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[3000 3512 3000 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[3339 3512 3339 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[3537 3512 3537 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[3677 3512 3677 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[3786 3512 3786 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[3875 3512 3875 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[3951 3512 3951 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[4016 3512 4016 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[4074 3512 4074 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[4125 3512 4125 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[4464 3512 4464 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[4662 3512 4662 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[4802 3512 4802 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[4911 3512 4911 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[5000 3512 5000 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[5076 3512 5076 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[5141 3512 5141 3532 
] dogrey 
 (drawsegs) 4 [ 32]
[5199 3512 5199 3532 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-300) 478 3550 0  0.00 [478 3450 200 99] Show
%Latex:\myput{478}{910}{5}{-300}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3512 690 3512 
] dogrey 
32 Setcolor
32 Setcolor
(-200) 478 3322 0  0.00 [478 3222 200 99] Show
%Latex:\myput{478}{1138}{5}{-200}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3284 690 3284 
] dogrey 
32 Setcolor
32 Setcolor
(-100) 478 3094 0  0.00 [478 2994 200 99] Show
%Latex:\myput{478}{1366}{5}{-100}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3056 690 3056 
] dogrey 
32 Setcolor
32 Setcolor
(0) 623 2867 0  0.00 [623 2767 55 99] Show
%Latex:\myput{623}{1593}{5}{0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2829 690 2829 
] dogrey 
32 Setcolor
32 Setcolor
(100) 512 2639 0  0.00 [512 2539 166 99] Show
%Latex:\myput{512}{1821}{5}{100}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2601 690 2601 
] dogrey 
32 Setcolor
32 Setcolor
(200) 512 2411 0  0.00 [512 2311 166 99] Show
%Latex:\myput{512}{2049}{5}{200}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2373 690 2373 
] dogrey 
32 Setcolor
32 Setcolor
(300) 512 2184 0  0.00 [512 2084 166 99] Show
%Latex:\myput{512}{2276}{5}{300}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2146 690 2146 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3512 705 3512 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3455 705 3455 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3398 705 3398 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3341 705 3341 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3284 705 3284 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3227 705 3227 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3170 705 3170 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3113 705 3113 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3056 705 3056 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3000 705 3000 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2943 705 2943 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2886 705 2886 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2829 705 2829 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2772 705 2772 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2715 705 2715 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2658 705 2658 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2601 705 2601 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2544 705 2544 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2487 705 2487 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2430 705 2430 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2373 705 2373 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2316 705 2316 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2259 705 2259 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2202 705 2202 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3512 5250 3512 
] dogrey 
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3512 750 2146 
] dogrey 
32 Setcolor
 (drawbox) 4 [ 0]
[750 2146 4500 1366 
] dogrey 
32 Setcolor
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Phase ) 2843 2059 0  0.00 [2843 1959 311 99] Show
%Latex:\myput{2843}{2401}{5}{Phase }
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
( Hz) 2925 3893 0  0.00 [2925 3793 150 99] Show
%Latex:\myput{2925}{567}{5}{ Hz}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(degrees) 451 2988 0 270.00 [451 2888 361 99] Show
%Latex:\myput{451}{1472}{5}{degrees}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[750 3891 750 4226 5250 4226 5250 3891 750 3891 
] dogrey 
33 Setcolor
/absolu true def
32 Setcolor
[] 0 setdash
32 Setcolor
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
5 Thickness
[] 0 setdash
 (drawsegs) 4 [ 0]
[750 3992 1110 3992 
] dogrey 
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(open loop) 1200 4009 0  0.00 [1200 3909 439 99] Show
%Latex:\myput{1200}{451}{5}{open loop}
1 Setcolor
5 Thickness
[] 0 setdash
1 Setcolor
5 Thickness
[] 0 setdash
 (drawsegs) 4 [ 1]
[750 4159 1110 4159 
] dogrey 
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(compensated open loop) 1200 4177 0  0.00 [1200 4077 1067 99] Show
%Latex:\myput{1200}{283}{5}{compensated open loop}
2 Setcolor
5 Thickness
[] 0 setdash
2 Setcolor
5 Thickness
[] 0 setdash
 (drawsegs) 4 [ 2]
[750 4326 1110 4326 
] dogrey 
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(compensated closed loop) 1200 4344 0  0.00 [1200 4244 1133 99] Show
%Latex:\myput{1200}{116}{5}{compensated closed loop}
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
%Latex:\end{picture}
 showpage

 end saved restore 

