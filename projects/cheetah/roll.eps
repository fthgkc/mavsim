%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 162 14 433 827 
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-Bold-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold-Oblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=1000
%scipos_h=3000
% Dessin en bas a gauche de taille 1000,3000
[2.711811 20 div 0 0 2.711811 20 div neg 1620 10 div 8277 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 2000 6000] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(2000,6000)(66,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[250 750 250 5250 1750 5250 1750 750 250 750 
] dogrey 
33 Setcolor
/absolu true def
32 Setcolor
[] 0 setdash
32 Setcolor
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
5 Thickness
250 306 1500 1839 setclipzone
-1 -1 200000 200000 setclipzone
[] 0 setdash
32 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[250 306 250 2145 1750 2145 1750 306 250 306 
] dogrey 
33 Setcolor
/absolu true def
32 Setcolor
[] 0 setdash
32 Setcolor
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[250 2145 250 306 
] dogrey 
 (drawsegs) 4 [ 3]
[625 2145 625 306 
] dogrey 
 (drawsegs) 4 [ 3]
[1000 2145 1000 306 
] dogrey 
 (drawsegs) 4 [ 3]
[1375 2145 1375 306 
] dogrey 
 (drawsegs) 4 [ 3]
[1750 2145 1750 306 
] dogrey 
 (drawsegs) 4 [ 3]
[250 2145 250 306 
] dogrey 
 (drawsegs) 4 [ 3]
[363 2145 363 306 
] dogrey 
 (drawsegs) 4 [ 3]
[429 2145 429 306 
] dogrey 
 (drawsegs) 4 [ 3]
[476 2145 476 306 
] dogrey 
 (drawsegs) 4 [ 3]
[512 2145 512 306 
] dogrey 
 (drawsegs) 4 [ 3]
[542 2145 542 306 
] dogrey 
 (drawsegs) 4 [ 3]
[567 2145 567 306 
] dogrey 
 (drawsegs) 4 [ 3]
[589 2145 589 306 
] dogrey 
 (drawsegs) 4 [ 3]
[608 2145 608 306 
] dogrey 
 (drawsegs) 4 [ 3]
[625 2145 625 306 
] dogrey 
 (drawsegs) 4 [ 3]
[738 2145 738 306 
] dogrey 
 (drawsegs) 4 [ 3]
[804 2145 804 306 
] dogrey 
 (drawsegs) 4 [ 3]
[851 2145 851 306 
] dogrey 
 (drawsegs) 4 [ 3]
[887 2145 887 306 
] dogrey 
 (drawsegs) 4 [ 3]
[917 2145 917 306 
] dogrey 
 (drawsegs) 4 [ 3]
[942 2145 942 306 
] dogrey 
 (drawsegs) 4 [ 3]
[964 2145 964 306 
] dogrey 
 (drawsegs) 4 [ 3]
[983 2145 983 306 
] dogrey 
 (drawsegs) 4 [ 3]
[1000 2145 1000 306 
] dogrey 
 (drawsegs) 4 [ 3]
[1113 2145 1113 306 
] dogrey 
 (drawsegs) 4 [ 3]
[1179 2145 1179 306 
] dogrey 
 (drawsegs) 4 [ 3]
[1226 2145 1226 306 
] dogrey 
 (drawsegs) 4 [ 3]
[1262 2145 1262 306 
] dogrey 
 (drawsegs) 4 [ 3]
[1292 2145 1292 306 
] dogrey 
 (drawsegs) 4 [ 3]
[1317 2145 1317 306 
] dogrey 
 (drawsegs) 4 [ 3]
[1339 2145 1339 306 
] dogrey 
 (drawsegs) 4 [ 3]
[1358 2145 1358 306 
] dogrey 
 (drawsegs) 4 [ 3]
[1375 2145 1375 306 
] dogrey 
 (drawsegs) 4 [ 3]
[1488 2145 1488 306 
] dogrey 
 (drawsegs) 4 [ 3]
[1554 2145 1554 306 
] dogrey 
 (drawsegs) 4 [ 3]
[1601 2145 1601 306 
] dogrey 
 (drawsegs) 4 [ 3]
[1637 2145 1637 306 
] dogrey 
 (drawsegs) 4 [ 3]
[1667 2145 1667 306 
] dogrey 
 (drawsegs) 4 [ 3]
[1692 2145 1692 306 
] dogrey 
 (drawsegs) 4 [ 3]
[1714 2145 1714 306 
] dogrey 
 (drawsegs) 4 [ 3]
[1733 2145 1733 306 
] dogrey 
[] 0 setdash
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[250 2145 1750 2145 
] dogrey 
 (drawsegs) 4 [ 3]
[250 1777 1750 1777 
] dogrey 
 (drawsegs) 4 [ 3]
[250 1409 1750 1409 
] dogrey 
 (drawsegs) 4 [ 3]
[250 1042 1750 1042 
] dogrey 
 (drawsegs) 4 [ 3]
[250 674 1750 674 
] dogrey 
 (drawsegs) 4 [ 3]
[250 306 1750 306 
] dogrey 
[] 0 setdash
0 Setcolor
5 Thickness
[] 0 setdash
250 306 1500 1839 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 802 [ 0]
[250 761 254 764 258 767 261 770 265 773 269 776 273 779 276 782 280 784 284 787 
288 790 291 793 295 796 299 799 303 802 306 805 310 808 314 811 318 814 321 817 
325 820 329 823 333 826 336 829 340 832 344 834 348 837 351 840 355 843 359 846 
363 849 366 852 370 855 374 858 378 861 381 864 385 867 389 870 393 873 396 876 
400 879 404 882 408 884 411 887 415 890 419 893 423 896 426 899 430 902 434 905 
438 908 441 911 445 914 449 917 453 920 456 923 460 926 464 929 468 932 471 934 
475 937 479 940 483 943 486 946 490 949 494 952 498 955 501 958 505 961 509 964 
513 967 516 970 520 973 524 976 528 979 531 982 535 984 539 987 543 990 546 993 
550 996 554 999 558 1002 561 1005 565 1008 569 1011 573 1014 576 1017 580 1020 584 1023 
588 1026 591 1029 595 1032 599 1034 603 1037 606 1040 610 1043 614 1046 618 1049 621 1052 
625 1055 629 1058 633 1061 636 1064 640 1067 644 1070 648 1073 651 1076 655 1079 659 1082 
663 1084 666 1087 670 1090 674 1093 678 1096 681 1099 685 1102 689 1105 693 1108 696 1111 
700 1114 704 1117 708 1120 711 1123 715 1126 719 1129 723 1132 726 1134 730 1137 734 1140 
738 1143 741 1146 745 1149 749 1152 753 1155 756 1158 760 1161 764 1164 768 1167 771 1170 
775 1173 779 1176 783 1179 786 1182 790 1184 794 1187 798 1190 801 1193 805 1196 809 1199 
813 1202 816 1205 820 1208 824 1211 828 1214 831 1217 835 1220 839 1223 843 1226 846 1229 
850 1232 854 1235 858 1237 861 1240 865 1243 869 1246 873 1249 876 1252 880 1255 884 1258 
888 1261 891 1264 895 1267 899 1270 903 1273 906 1276 910 1279 914 1282 918 1285 921 1288 
925 1291 929 1294 933 1296 936 1299 940 1302 944 1305 948 1308 951 1311 955 1314 959 1317 
963 1320 966 1323 970 1326 974 1329 978 1332 981 1335 985 1338 989 1341 993 1344 996 1347 
1000 1350 1004 1353 1008 1356 1011 1359 1015 1362 1019 1365 1023 1368 1026 1371 1030 1374 1034 1377 
1038 1379 1041 1382 1045 1385 1049 1388 1053 1391 1056 1394 1060 1397 1064 1400 1068 1403 1071 1406 
1075 1409 1079 1412 1083 1415 1086 1418 1090 1422 1094 1425 1098 1428 1101 1431 1105 1434 1109 1437 
1113 1440 1116 1443 1120 1446 1124 1449 1128 1452 1131 1455 1135 1458 1139 1461 1143 1464 1146 1467 
1150 1470 1154 1473 1158 1476 1161 1479 1165 1482 1169 1486 1173 1489 1176 1492 1180 1495 1184 1498 
1188 1501 1191 1504 1195 1507 1199 1510 1203 1514 1206 1517 1210 1520 1214 1523 1218 1526 1221 1529 
1225 1533 1229 1536 1233 1539 1236 1542 1240 1545 1244 1549 1248 1552 1251 1555 1255 1559 1259 1562 
1263 1565 1266 1569 1270 1572 1274 1576 1278 1580 1281 1583 1285 1587 1289 1591 1293 1595 1296 1598 
1300 1602 1304 1606 1308 1611 1311 1615 1315 1619 1319 1623 1323 1628 1326 1632 1330 1637 1334 1641 
1338 1646 1341 1650 1345 1655 1349 1660 1353 1664 1356 1669 1360 1674 1364 1679 1368 1683 1371 1688 
1375 1693 1379 1697 1383 1702 1386 1707 1390 1712 1394 1716 1398 1721 1401 1725 1405 1730 1409 1735 
1413 1739 1416 1744 1420 1748 1424 1752 1428 1757 1431 1761 1435 1765 1439 1770 1443 1774 1446 1778 
1450 1782 1454 1786 1458 1790 1461 1794 1465 1798 1469 1802 1473 1806 1476 1810 1480 1814 1484 1818 
1488 1822 1491 1825 1495 1829 1499 1833 1503 1836 1506 1840 1510 1844 1514 1847 1518 1851 1521 1854 
1525 1858 1529 1861 1533 1865 1536 1868 1540 1872 1544 1875 1548 1879 1551 1882 1555 1885 1559 1889 
1563 1892 1566 1895 1570 1899 1574 1902 1578 1905 1581 1908 1585 1912 1589 1915 1593 1918 1596 1921 
1600 1925 1604 1928 1608 1931 1611 1934 1615 1937 1619 1940 1623 1943 1626 1947 1630 1950 1634 1953 
1638 1956 1641 1959 1645 1962 1649 1965 1653 1968 1656 1971 1660 1974 1664 1977 1668 1981 1671 1984 
1675 1987 1679 1990 1683 1993 1686 1996 1690 1999 1694 2002 1698 2005 1701 2008 1705 2011 1709 2014 
1713 2017 1716 2020 1720 2023 1724 2026 1728 2029 1731 2032 1735 2035 1739 2038 1743 2041 1746 2044 
1748 2045 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
250 306 1500 1839 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 802 [ 0]
[250 555 254 558 258 561 261 564 265 567 269 570 273 573 276 576 280 579 284 582 
288 585 291 587 295 590 299 593 303 596 306 599 310 602 314 605 318 608 321 611 
325 614 329 617 333 620 336 623 340 626 344 628 348 631 351 634 355 637 359 640 
363 643 366 646 370 649 374 652 378 655 381 658 385 661 389 663 393 666 396 669 
400 672 404 675 408 678 411 681 415 684 419 687 423 690 426 692 430 695 434 698 
438 701 441 704 445 707 449 710 453 713 456 716 460 718 464 721 468 724 471 727 
475 730 479 733 483 736 486 738 490 741 494 744 498 747 501 750 505 753 509 755 
513 758 516 761 520 764 524 767 528 769 531 772 535 775 539 778 543 780 546 783 
550 786 554 789 558 791 561 794 565 797 569 800 573 802 576 805 580 808 584 810 
588 813 591 816 595 818 599 821 603 823 606 826 610 829 614 831 618 834 621 836 
625 839 629 841 633 844 636 846 640 849 644 851 648 854 651 856 655 859 659 861 
663 863 666 866 670 868 674 870 678 873 681 875 685 877 689 880 693 882 696 884 
700 886 704 889 708 891 711 893 715 895 719 897 723 899 726 901 730 903 734 906 
738 908 741 910 745 912 749 914 753 916 756 918 760 920 764 921 768 923 771 925 
775 927 779 929 783 931 786 933 790 935 794 937 798 938 801 940 805 942 809 944 
813 946 816 947 820 949 824 951 828 953 831 954 835 956 839 958 843 959 846 961 
850 963 854 964 858 966 861 968 865 969 869 971 873 973 876 974 880 976 884 978 
888 979 891 981 895 982 899 984 903 986 906 987 910 989 914 990 918 992 921 994 
925 995 929 997 933 998 936 1000 940 1001 944 1003 948 1005 951 1006 955 1008 959 1009 
963 1011 966 1012 970 1014 974 1015 978 1017 981 1019 985 1020 989 1022 993 1023 996 1025 
1000 1026 1004 1028 1008 1029 1011 1031 1015 1032 1019 1034 1023 1036 1026 1037 1030 1039 1034 1040 
1038 1042 1041 1043 1045 1045 1049 1046 1053 1048 1056 1050 1060 1051 1064 1053 1068 1054 1071 1056 
1075 1057 1079 1059 1083 1061 1086 1062 1090 1064 1094 1065 1098 1067 1101 1069 1105 1070 1109 1072 
1113 1073 1116 1075 1120 1077 1124 1078 1128 1080 1131 1082 1135 1083 1139 1085 1143 1087 1146 1088 
1150 1090 1154 1092 1158 1093 1161 1095 1165 1097 1169 1098 1173 1100 1176 1102 1180 1103 1184 1105 
1188 1107 1191 1109 1195 1110 1199 1112 1203 1114 1206 1116 1210 1118 1214 1119 1218 1121 1221 1123 
1225 1125 1229 1127 1233 1129 1236 1131 1240 1133 1244 1135 1248 1137 1251 1139 1255 1141 1259 1143 
1263 1145 1266 1147 1270 1150 1274 1152 1278 1154 1281 1157 1285 1159 1289 1162 1293 1165 1296 1167 
1300 1170 1304 1173 1308 1176 1311 1179 1315 1182 1319 1185 1323 1188 1326 1192 1330 1195 1334 1199 
1338 1202 1341 1206 1345 1209 1349 1213 1353 1216 1356 1220 1360 1224 1364 1227 1368 1231 1371 1235 
1375 1239 1379 1242 1383 1246 1386 1250 1390 1253 1394 1257 1398 1261 1401 1264 1405 1268 1409 1271 
1413 1275 1416 1278 1420 1282 1424 1285 1428 1289 1431 1292 1435 1295 1439 1299 1443 1302 1446 1305 
1450 1308 1454 1311 1458 1314 1461 1317 1465 1320 1469 1323 1473 1326 1476 1329 1480 1332 1484 1335 
1488 1337 1491 1340 1495 1343 1499 1346 1503 1348 1506 1351 1510 1353 1514 1356 1518 1358 1521 1361 
1525 1363 1529 1365 1533 1368 1536 1370 1540 1372 1544 1375 1548 1377 1551 1379 1555 1381 1559 1383 
1563 1386 1566 1388 1570 1390 1574 1392 1578 1394 1581 1396 1585 1398 1589 1400 1593 1402 1596 1404 
1600 1406 1604 1408 1608 1409 1611 1411 1615 1413 1619 1415 1623 1417 1626 1419 1630 1420 1634 1422 
1638 1424 1641 1426 1645 1428 1649 1429 1653 1431 1656 1433 1660 1434 1664 1436 1668 1438 1671 1439 
1675 1441 1679 1443 1683 1444 1686 1446 1690 1448 1694 1449 1698 1451 1701 1453 1705 1454 1709 1456 
1713 1457 1716 1459 1720 1461 1724 1462 1728 1464 1731 1465 1735 1467 1739 1468 1743 1470 1746 1472 
1748 1472 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
250 306 1500 1839 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 802 [ 0]
[250 1247 254 1247 258 1247 261 1247 265 1247 269 1247 273 1247 276 1247 280 1247 284 1247 
288 1247 291 1247 295 1247 299 1247 303 1247 306 1247 310 1247 314 1247 318 1247 321 1247 
325 1247 329 1248 333 1248 336 1248 340 1248 344 1248 348 1248 351 1248 355 1248 359 1248 
363 1248 366 1248 370 1248 374 1248 378 1248 381 1248 385 1248 389 1248 393 1248 396 1248 
400 1248 404 1248 408 1248 411 1248 415 1248 419 1248 423 1248 426 1248 430 1248 434 1248 
438 1248 441 1248 445 1248 449 1248 453 1248 456 1248 460 1248 464 1249 468 1249 471 1249 
475 1249 479 1249 483 1249 486 1249 490 1249 494 1249 498 1249 501 1249 505 1249 509 1249 
513 1250 516 1250 520 1250 524 1250 528 1250 531 1250 535 1250 539 1250 543 1251 546 1251 
550 1251 554 1251 558 1251 561 1251 565 1251 569 1252 573 1252 576 1252 580 1252 584 1253 
588 1253 591 1253 595 1253 599 1253 603 1254 606 1254 610 1254 614 1255 618 1255 621 1255 
625 1256 629 1256 633 1256 636 1257 640 1257 644 1257 648 1258 651 1258 655 1259 659 1259 
663 1260 666 1260 670 1261 674 1261 678 1262 681 1262 685 1263 689 1263 693 1264 696 1264 
700 1265 704 1266 708 1266 711 1267 715 1268 719 1268 723 1269 726 1270 730 1271 734 1271 
738 1272 741 1273 745 1274 749 1275 753 1276 756 1277 760 1277 764 1278 768 1279 771 1280 
775 1281 779 1282 783 1283 786 1284 790 1285 794 1286 798 1287 801 1288 805 1289 809 1291 
813 1292 816 1293 820 1294 824 1295 828 1296 831 1298 835 1299 839 1300 843 1301 846 1302 
850 1304 854 1305 858 1306 861 1308 865 1309 869 1310 873 1311 876 1313 880 1314 884 1315 
888 1317 891 1318 895 1320 899 1321 903 1322 906 1324 910 1325 914 1327 918 1328 921 1330 
925 1331 929 1333 933 1334 936 1336 940 1337 944 1339 948 1340 951 1342 955 1343 959 1345 
963 1346 966 1348 970 1350 974 1351 978 1353 981 1355 985 1356 989 1358 993 1360 996 1361 
1000 1363 1004 1365 1008 1366 1011 1368 1015 1370 1019 1372 1023 1374 1026 1376 1030 1377 1034 1379 
1038 1381 1041 1383 1045 1385 1049 1387 1053 1389 1056 1391 1060 1393 1064 1395 1068 1397 1071 1400 
1075 1402 1079 1404 1083 1406 1086 1408 1090 1411 1094 1413 1098 1415 1101 1418 1105 1420 1109 1423 
1113 1425 1116 1428 1120 1430 1124 1433 1128 1435 1131 1438 1135 1441 1139 1443 1143 1446 1146 1449 
1150 1451 1154 1454 1158 1457 1161 1459 1165 1462 1169 1465 1173 1468 1176 1471 1180 1474 1184 1476 
1188 1479 1191 1482 1195 1485 1199 1488 1203 1491 1206 1494 1210 1497 1214 1500 1218 1503 1221 1507 
1225 1510 1229 1513 1233 1517 1236 1521 1240 1525 1244 1529 1248 1534 1251 1538 1255 1543 1259 1548 
1263 1553 1266 1558 1270 1564 1274 1570 1278 1575 1281 1581 1285 1587 1289 1593 1293 1599 1296 1605 
1300 1611 1304 1617 1308 1623 1311 1628 1315 1634 1319 1639 1323 1645 1326 1650 1330 1655 1334 1660 
1338 1665 1341 1670 1345 1675 1349 1679 1353 1684 1356 1688 1360 1692 1364 1697 1368 1701 1371 1705 
1375 1709 1379 1712 1383 1716 1386 1720 1390 1724 1394 1727 1398 1731 1401 1734 1405 1738 1409 1741 
1413 1744 1416 1748 1420 1751 1424 1754 1428 1758 1431 1761 1435 1764 1439 1767 1443 1770 1446 1774 
1450 1777 1454 1780 1458 1783 1461 1786 1465 1789 1469 1792 1473 1795 1476 1798 1480 1801 1484 1805 
1488 1808 1491 1811 1495 1814 1499 1817 1503 1820 1506 1823 1510 1826 1514 1829 1518 1832 1521 1835 
1525 1838 1529 1841 1533 1844 1536 1847 1540 1850 1544 1853 1548 1856 1551 1859 1555 1862 1559 1865 
1563 1868 1566 1871 1570 1873 1574 1876 1578 1879 1581 1882 1585 1885 1589 1888 1593 1891 1596 1894 
1600 1897 1604 1900 1608 1903 1611 1906 1615 1909 1619 1912 1623 1915 1626 1918 1630 1921 1634 1924 
1638 1927 1641 1930 1645 1933 1649 1936 1653 1939 1656 1941 1660 1944 1664 1947 1668 1950 1671 1953 
1675 1956 1679 1959 1683 1962 1686 1965 1690 1968 1694 1971 1698 1974 1701 1977 1705 1980 1709 1983 
1713 1986 1716 1989 1720 1992 1724 1995 1728 1997 1731 2000 1735 2003 1739 2006 1743 2009 1746 2012 
1748 2014 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
(-2) 215 2258 0  0.00 [215 2178 71 79] Show
%Latex:\myput{215}{3742}{4}{-2}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 104 2354 0  0.00 [104 2254 111 99] Show
%Latex:\myput{104}{3646}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[250 2145 250 2181 
] dogrey 
32 Setcolor
32 Setcolor
(-1) 590 2258 0  0.00 [590 2178 71 79] Show
%Latex:\myput{590}{3742}{4}{-1}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 479 2354 0  0.00 [479 2254 111 99] Show
%Latex:\myput{479}{3646}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[625 2145 625 2181 
] dogrey 
32 Setcolor
32 Setcolor
(0) 978 2258 0  0.00 [978 2178 44 79] Show
%Latex:\myput{978}{3742}{4}{0}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 867 2354 0  0.00 [867 2254 111 99] Show
%Latex:\myput{867}{3646}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[1000 2145 1000 2181 
] dogrey 
32 Setcolor
32 Setcolor
(1) 1353 2258 0  0.00 [1353 2178 44 79] Show
%Latex:\myput{1353}{3742}{4}{1}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 1242 2354 0  0.00 [1242 2254 111 99] Show
%Latex:\myput{1242}{3646}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[1375 2145 1375 2181 
] dogrey 
32 Setcolor
32 Setcolor
(2) 1728 2258 0  0.00 [1728 2178 44 79] Show
%Latex:\myput{1728}{3742}{4}{2}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 1617 2354 0  0.00 [1617 2254 111 99] Show
%Latex:\myput{1617}{3646}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[1750 2145 1750 2181 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[250 2145 250 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[363 2145 363 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[429 2145 429 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[476 2145 476 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[512 2145 512 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[542 2145 542 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[567 2145 567 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[589 2145 589 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[608 2145 608 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[625 2145 625 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[738 2145 738 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[804 2145 804 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[851 2145 851 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[887 2145 887 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[917 2145 917 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[942 2145 942 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[964 2145 964 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[983 2145 983 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[1000 2145 1000 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[1113 2145 1113 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[1179 2145 1179 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[1226 2145 1226 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[1262 2145 1262 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[1292 2145 1292 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[1317 2145 1317 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[1339 2145 1339 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[1358 2145 1358 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[1375 2145 1375 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[1488 2145 1488 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[1554 2145 1554 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[1601 2145 1601 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[1637 2145 1637 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[1667 2145 1667 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[1692 2145 1692 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[1714 2145 1714 2172 
] dogrey 
 (drawsegs) 4 [ 32]
[1733 2145 1733 2172 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-150) 26 2183 0  0.00 [26 2083 200 99] Show
%Latex:\myput{26}{3817}{5}{-150}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[250 2145 230 2145 
] dogrey 
32 Setcolor
32 Setcolor
(-100) 26 1815 0  0.00 [26 1715 200 99] Show
%Latex:\myput{26}{4185}{5}{-100}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[250 1777 230 1777 
] dogrey 
32 Setcolor
32 Setcolor
(-50) 82 1447 0  0.00 [82 1347 144 99] Show
%Latex:\myput{82}{4553}{5}{-50}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[250 1409 230 1409 
] dogrey 
32 Setcolor
32 Setcolor
(0) 171 1080 0  0.00 [171 980 55 99] Show
%Latex:\myput{171}{4920}{5}{0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[250 1042 230 1042 
] dogrey 
32 Setcolor
32 Setcolor
(50) 115 712 0  0.00 [115 612 111 99] Show
%Latex:\myput{115}{5288}{5}{50}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[250 674 230 674 
] dogrey 
32 Setcolor
32 Setcolor
(100) 60 344 0  0.00 [60 244 166 99] Show
%Latex:\myput{60}{5656}{5}{100}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[250 306 230 306 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[250 2145 235 2145 
] dogrey 
 (drawsegs) 4 [ 32]
[250 2053 235 2053 
] dogrey 
 (drawsegs) 4 [ 32]
[250 1961 235 1961 
] dogrey 
 (drawsegs) 4 [ 32]
[250 1869 235 1869 
] dogrey 
 (drawsegs) 4 [ 32]
[250 1777 235 1777 
] dogrey 
 (drawsegs) 4 [ 32]
[250 1685 235 1685 
] dogrey 
 (drawsegs) 4 [ 32]
[250 1593 235 1593 
] dogrey 
 (drawsegs) 4 [ 32]
[250 1501 235 1501 
] dogrey 
 (drawsegs) 4 [ 32]
[250 1409 235 1409 
] dogrey 
 (drawsegs) 4 [ 32]
[250 1317 235 1317 
] dogrey 
 (drawsegs) 4 [ 32]
[250 1226 235 1226 
] dogrey 
 (drawsegs) 4 [ 32]
[250 1134 235 1134 
] dogrey 
 (drawsegs) 4 [ 32]
[250 1042 235 1042 
] dogrey 
 (drawsegs) 4 [ 32]
[250 950 235 950 
] dogrey 
 (drawsegs) 4 [ 32]
[250 858 235 858 
] dogrey 
 (drawsegs) 4 [ 32]
[250 766 235 766 
] dogrey 
 (drawsegs) 4 [ 32]
[250 674 235 674 
] dogrey 
 (drawsegs) 4 [ 32]
[250 582 235 582 
] dogrey 
 (drawsegs) 4 [ 32]
[250 490 235 490 
] dogrey 
 (drawsegs) 4 [ 32]
[250 398 235 398 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[250 2145 1750 2145 
] dogrey 
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[250 2145 250 306 
] dogrey 
32 Setcolor
 (drawbox) 4 [ 0]
[250 306 1500 1839 
] dogrey 
32 Setcolor
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Magnitude ) 752 180 0  0.00 [752 80 494 99] Show
%Latex:\myput{752}{5820}{5}{Magnitude }
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
( Hz) 925 2477 0  0.00 [925 2377 150 99] Show
%Latex:\myput{925}{3523}{5}{ Hz}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(db) -11 1259 0 270.00 [-11 1159 111 99] Show
%Latex:\myput{-11}{4741}{5}{db}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
5 Thickness
250 2886 1500 1839 setclipzone
-1 -1 200000 200000 setclipzone
[] 0 setdash
32 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[250 2886 250 4725 1750 4725 1750 2886 250 2886 
] dogrey 
33 Setcolor
/absolu true def
32 Setcolor
[] 0 setdash
32 Setcolor
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[250 4725 250 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[625 4725 625 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[1000 4725 1000 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[1375 4725 1375 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[1750 4725 1750 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[250 4725 250 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[363 4725 363 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[429 4725 429 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[476 4725 476 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[512 4725 512 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[542 4725 542 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[567 4725 567 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[589 4725 589 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[608 4725 608 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[625 4725 625 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[738 4725 738 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[804 4725 804 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[851 4725 851 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[887 4725 887 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[917 4725 917 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[942 4725 942 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[964 4725 964 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[983 4725 983 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[1000 4725 1000 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[1113 4725 1113 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[1179 4725 1179 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[1226 4725 1226 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[1262 4725 1262 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[1292 4725 1292 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[1317 4725 1317 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[1339 4725 1339 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[1358 4725 1358 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[1375 4725 1375 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[1488 4725 1488 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[1554 4725 1554 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[1601 4725 1601 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[1637 4725 1637 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[1667 4725 1667 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[1692 4725 1692 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[1714 4725 1714 2886 
] dogrey 
 (drawsegs) 4 [ 3]
[1733 4725 1733 2886 
] dogrey 
[] 0 setdash
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[250 4725 1750 4725 
] dogrey 
 (drawsegs) 4 [ 3]
[250 4541 1750 4541 
] dogrey 
 (drawsegs) 4 [ 3]
[250 4357 1750 4357 
] dogrey 
 (drawsegs) 4 [ 3]
[250 4173 1750 4173 
] dogrey 
 (drawsegs) 4 [ 3]
[250 3989 1750 3989 
] dogrey 
 (drawsegs) 4 [ 3]
[250 3806 1750 3806 
] dogrey 
 (drawsegs) 4 [ 3]
[250 3622 1750 3622 
] dogrey 
 (drawsegs) 4 [ 3]
[250 3438 1750 3438 
] dogrey 
 (drawsegs) 4 [ 3]
[250 3254 1750 3254 
] dogrey 
 (drawsegs) 4 [ 3]
[250 3070 1750 3070 
] dogrey 
 (drawsegs) 4 [ 3]
[250 2886 1750 2886 
] dogrey 
[] 0 setdash
0 Setcolor
5 Thickness
[] 0 setdash
250 2886 1500 1839 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 802 [ 0]
[250 2960 254 2960 258 2960 261 2960 265 2960 269 2960 273 2960 276 2960 280 2960 284 2960 
288 2960 291 2960 295 2960 299 2960 303 2960 306 2960 310 2960 314 2960 318 2960 321 2960 
325 2960 329 2960 333 2960 336 2960 340 2960 344 2960 348 2960 351 2960 355 2960 359 2960 
363 2960 366 2960 370 2961 374 2961 378 2961 381 2961 385 2961 389 2961 393 2961 396 2961 
400 2961 404 2961 408 2961 411 2961 415 2961 419 2961 423 2961 426 2961 430 2961 434 2961 
438 2961 441 2961 445 2961 449 2961 453 2961 456 2961 460 2961 464 2961 468 2961 471 2961 
475 2961 479 2961 483 2961 486 2961 490 2961 494 2961 498 2961 501 2961 505 2961 509 2961 
513 2961 516 2961 520 2961 524 2961 528 2961 531 2962 535 2962 539 2962 543 2962 546 2962 
550 2962 554 2962 558 2962 561 2962 565 2962 569 2962 573 2962 576 2962 580 2962 584 2962 
588 2962 591 2962 595 2962 599 2962 603 2962 606 2962 610 2963 614 2963 618 2963 621 2963 
625 2963 629 2963 633 2963 636 2963 640 2963 644 2963 648 2963 651 2963 655 2963 659 2963 
663 2964 666 2964 670 2964 674 2964 678 2964 681 2964 685 2964 689 2964 693 2964 696 2964 
700 2964 704 2965 708 2965 711 2965 715 2965 719 2965 723 2965 726 2965 730 2965 734 2965 
738 2966 741 2966 745 2966 749 2966 753 2966 756 2966 760 2966 764 2967 768 2967 771 2967 
775 2967 779 2967 783 2967 786 2968 790 2968 794 2968 798 2968 801 2968 805 2969 809 2969 
813 2969 816 2969 820 2969 824 2970 828 2970 831 2970 835 2970 839 2971 843 2971 846 2971 
850 2971 854 2972 858 2972 861 2972 865 2972 869 2973 873 2973 876 2973 880 2974 884 2974 
888 2974 891 2975 895 2975 899 2975 903 2976 906 2976 910 2976 914 2977 918 2977 921 2978 
925 2978 929 2978 933 2979 936 2979 940 2980 944 2980 948 2981 951 2981 955 2982 959 2982 
963 2983 966 2983 970 2984 974 2984 978 2985 981 2985 985 2986 989 2987 993 2987 996 2988 
1000 2988 1004 2989 1008 2990 1011 2990 1015 2991 1019 2992 1023 2993 1026 2993 1030 2994 1034 2995 
1038 2996 1041 2996 1045 2997 1049 2998 1053 2999 1056 3000 1060 3001 1064 3002 1068 3003 1071 3004 
1075 3005 1079 3006 1083 3007 1086 3008 1090 3009 1094 3010 1098 3011 1101 3012 1105 3013 1109 3014 
1113 3015 1116 3017 1120 3018 1124 3019 1128 3020 1131 3022 1135 3023 1139 3024 1143 3026 1146 3027 
1150 3029 1154 3030 1158 3032 1161 3033 1165 3035 1169 3036 1173 3038 1176 3040 1180 3041 1184 3043 
1188 3045 1191 3047 1195 3049 1199 3051 1203 3053 1206 3055 1210 3057 1214 3059 1218 3061 1221 3064 
1225 3066 1229 3068 1233 3071 1236 3074 1240 3076 1244 3079 1248 3082 1251 3085 1255 3088 1259 3091 
1263 3095 1266 3098 1270 3101 1274 3105 1278 3108 1281 3112 1285 3116 1289 3119 1293 3123 1296 3127 
1300 3130 1304 3134 1308 3138 1311 3141 1315 3144 1319 3148 1323 3151 1326 3154 1330 3157 1334 3159 
1338 3162 1341 3164 1345 3166 1349 3168 1353 3169 1356 3170 1360 3172 1364 3172 1368 3173 1371 3173 
1375 3174 1379 3174 1383 3173 1386 3173 1390 3172 1394 3171 1398 3170 1401 3169 1405 3168 1409 3167 
1413 3165 1416 3163 1420 3162 1424 3160 1428 3158 1431 3156 1435 3153 1439 3151 1443 3149 1446 3147 
1450 3144 1454 3142 1458 3139 1461 3137 1465 3134 1469 3131 1473 3129 1476 3126 1480 3124 1484 3121 
1488 3118 1491 3116 1495 3113 1499 3110 1503 3108 1506 3105 1510 3103 1514 3100 1518 3097 1521 3095 
1525 3092 1529 3090 1533 3087 1536 3085 1540 3082 1544 3080 1548 3078 1551 3075 1555 3073 1559 3071 
1563 3069 1566 3066 1570 3064 1574 3062 1578 3060 1581 3058 1585 3056 1589 3054 1593 3052 1596 3050 
1600 3048 1604 3046 1608 3044 1611 3043 1615 3041 1619 3039 1623 3037 1626 3036 1630 3034 1634 3032 
1638 3031 1641 3029 1645 3028 1649 3026 1653 3025 1656 3023 1660 3022 1664 3021 1668 3019 1671 3018 
1675 3017 1679 3015 1683 3014 1686 3013 1690 3012 1694 3011 1698 3010 1701 3008 1705 3007 1709 3006 
1713 3005 1716 3004 1720 3003 1724 3002 1728 3001 1731 3000 1735 2999 1739 2999 1743 2998 1746 2997 
1748 2996 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
250 2886 1500 1839 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 802 [ 0]
[250 4271 254 4271 258 4270 261 4270 265 4270 269 4269 273 4269 276 4269 280 4268 284 4268 
288 4268 291 4267 295 4267 299 4266 303 4266 306 4266 310 4265 314 4265 318 4264 321 4264 
325 4264 329 4263 333 4263 336 4262 340 4262 344 4261 348 4261 351 4260 355 4260 359 4259 
363 4258 366 4258 370 4257 374 4257 378 4256 381 4255 385 4255 389 4254 393 4253 396 4253 
400 4252 404 4251 408 4251 411 4250 415 4249 419 4248 423 4247 426 4247 430 4246 434 4245 
438 4244 441 4243 445 4242 449 4241 453 4240 456 4239 460 4238 464 4237 468 4236 471 4235 
475 4234 479 4233 483 4232 486 4231 490 4230 494 4229 498 4227 501 4226 505 4225 509 4224 
513 4222 516 4221 520 4220 524 4218 528 4217 531 4215 535 4214 539 4212 543 4211 546 4209 
550 4208 554 4206 558 4205 561 4203 565 4201 569 4200 573 4198 576 4196 580 4194 584 4193 
588 4191 591 4189 595 4187 599 4185 603 4183 606 4181 610 4179 614 4177 618 4175 621 4173 
625 4171 629 4169 633 4167 636 4165 640 4163 644 4161 648 4159 651 4157 655 4155 659 4152 
663 4150 666 4148 670 4146 674 4144 678 4141 681 4139 685 4137 689 4135 693 4133 696 4130 
700 4128 704 4126 708 4124 711 4122 715 4119 719 4117 723 4115 726 4113 730 4111 734 4109 
738 4107 741 4105 745 4103 749 4101 753 4099 756 4097 760 4095 764 4093 768 4091 771 4089 
775 4087 779 4085 783 4083 786 4082 790 4080 794 4078 798 4077 801 4075 805 4073 809 4072 
813 4070 816 4069 820 4067 824 4066 828 4065 831 4063 835 4062 839 4061 843 4060 846 4058 
850 4057 854 4056 858 4055 861 4054 865 4053 869 4052 873 4051 876 4050 880 4050 884 4049 
888 4048 891 4048 895 4047 899 4046 903 4046 906 4045 910 4045 914 4044 918 4044 921 4044 
925 4043 929 4043 933 4043 936 4043 940 4043 944 4043 948 4043 951 4043 955 4043 959 4043 
963 4043 966 4043 970 4044 974 4044 978 4044 981 4045 985 4045 989 4046 993 4046 996 4047 
1000 4047 1004 4048 1008 4049 1011 4049 1015 4050 1019 4051 1023 4052 1026 4053 1030 4054 1034 4055 
1038 4056 1041 4057 1045 4059 1049 4060 1053 4061 1056 4063 1060 4064 1064 4066 1068 4067 1071 4069 
1075 4070 1079 4072 1083 4074 1086 4076 1090 4078 1094 4080 1098 4082 1101 4084 1105 4086 1109 4088 
1113 4090 1116 4092 1120 4095 1124 4097 1128 4100 1131 4102 1135 4105 1139 4108 1143 4111 1146 4113 
1150 4116 1154 4119 1158 4123 1161 4126 1165 4129 1169 4132 1173 4136 1176 4139 1180 4143 1184 4146 
1188 4150 1191 4154 1195 4158 1199 4162 1203 4166 1206 4170 1210 4175 1214 4179 1218 4184 1221 4189 
1225 4194 1229 4199 1233 4204 1236 4209 1240 4214 1244 4220 1248 4226 1251 4231 1255 4237 1259 4243 
1263 4250 1266 4256 1270 4263 1274 4269 1278 4276 1281 4283 1285 4290 1289 4297 1293 4304 1296 4311 
1300 4318 1304 4326 1308 4333 1311 4340 1315 4347 1319 4354 1323 4361 1326 4368 1330 4375 1334 4381 
1338 4388 1341 4394 1345 4400 1349 4406 1353 4412 1356 4417 1360 4422 1364 4427 1368 4432 1371 4437 
1375 4441 1379 4446 1383 4450 1386 4454 1390 4458 1394 4461 1398 4465 1401 4468 1405 4471 1409 4474 
1413 4477 1416 4480 1420 4483 1424 4486 1428 4488 1431 4490 1435 4493 1439 4495 1443 4497 1446 4499 
1450 4502 1454 4504 1458 4505 1461 4507 1465 4509 1469 4511 1473 4513 1476 4515 1480 4516 1484 4518 
1488 4520 1491 4521 1495 4523 1499 4524 1503 4526 1506 4527 1510 4529 1514 4530 1518 4532 1521 4533 
1525 4535 1529 4536 1533 4537 1536 4539 1540 4540 1544 4541 1548 4543 1551 4544 1555 4545 1559 4547 
1563 4548 1566 4549 1570 4550 1574 4551 1578 4553 1581 4554 1585 4555 1589 4556 1593 4557 1596 4558 
1600 4559 1604 4561 1608 4562 1611 4563 1615 4564 1619 4565 1623 4566 1626 4567 1630 4568 1634 4569 
1638 4570 1641 4570 1645 4571 1649 4572 1653 4573 1656 4574 1660 4575 1664 4576 1668 4577 1671 4577 
1675 4578 1679 4579 1683 4580 1686 4580 1690 4581 1694 4582 1698 4583 1701 4583 1705 4584 1709 4585 
1713 4585 1716 4586 1720 4586 1724 4587 1728 4588 1731 4588 1735 4589 1739 4589 1743 4590 1746 4590 
1748 4591 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
250 2886 1500 1839 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 802 [ 0]
[250 3635 254 3635 258 3635 261 3635 265 3636 269 3636 273 3636 276 3637 280 3637 284 3638 
288 3638 291 3638 295 3639 299 3639 303 3639 306 3640 310 3640 314 3641 318 3641 321 3642 
325 3642 329 3643 333 3643 336 3644 340 3644 344 3645 348 3645 351 3646 355 3646 359 3647 
363 3647 366 3648 370 3649 374 3649 378 3650 381 3650 385 3651 389 3652 393 3652 396 3653 
400 3654 404 3655 408 3655 411 3656 415 3657 419 3658 423 3659 426 3659 430 3660 434 3661 
438 3662 441 3663 445 3664 449 3665 453 3666 456 3667 460 3668 464 3669 468 3670 471 3671 
475 3672 479 3674 483 3675 486 3676 490 3677 494 3678 498 3680 501 3681 505 3682 509 3684 
513 3685 516 3686 520 3688 524 3689 528 3691 531 3692 535 3694 539 3696 543 3697 546 3699 
550 3700 554 3702 558 3704 561 3706 565 3708 569 3709 573 3711 576 3713 580 3715 584 3717 
588 3719 591 3721 595 3723 599 3725 603 3728 606 3730 610 3732 614 3734 618 3736 621 3739 
625 3741 629 3744 633 3746 636 3748 640 3751 644 3753 648 3756 651 3759 655 3761 659 3764 
663 3767 666 3769 670 3772 674 3775 678 3777 681 3780 685 3783 689 3786 693 3789 696 3792 
700 3795 704 3798 708 3801 711 3804 715 3807 719 3810 723 3813 726 3816 730 3819 734 3822 
738 3825 741 3828 745 3831 749 3834 753 3837 756 3841 760 3844 764 3847 768 3850 771 3853 
775 3856 779 3860 783 3863 786 3866 790 3869 794 3872 798 3875 801 3879 805 3882 809 3885 
813 3888 816 3891 820 3895 824 3898 828 3901 831 3904 835 3907 839 3910 843 3914 846 3917 
850 3920 854 3923 858 3926 861 3930 865 3933 869 3936 873 3939 876 3943 880 3946 884 3949 
888 3952 891 3955 895 3959 899 3962 903 3965 906 3969 910 3972 914 3975 918 3979 921 3982 
925 3985 929 3989 933 3992 936 3996 940 3999 944 4003 948 4006 951 4010 955 4013 959 4017 
963 4021 966 4024 970 4028 974 4032 978 4036 981 4040 985 4043 989 4047 993 4051 996 4055 
1000 4059 1004 4063 1008 4067 1011 4072 1015 4076 1019 4080 1023 4084 1026 4089 1030 4093 1034 4098 
1038 4102 1041 4107 1045 4111 1049 4116 1053 4121 1056 4125 1060 4130 1064 4135 1068 4140 1071 4145 
1075 4150 1079 4155 1083 4160 1086 4165 1090 4170 1094 4175 1098 4180 1101 4185 1105 4190 1109 4195 
1113 4200 1116 4205 1120 4210 1124 4215 1128 4221 1131 4226 1135 4231 1139 4236 1143 4241 1146 4246 
1150 4251 1154 4257 1158 4262 1161 4267 1165 4272 1169 4278 1173 4283 1176 4288 1180 4294 1184 4299 
1188 4305 1191 4311 1195 4317 1199 4323 1203 4330 1206 4336 1210 4343 1214 4350 1218 4357 1221 4365 
1225 4373 1229 4381 1233 4389 1236 4397 1240 4406 1244 4414 1248 4422 1251 4431 1255 4439 1259 4447 
1263 4454 1266 4461 1270 4467 1274 4473 1278 4478 1281 4482 1285 4485 1289 4488 1293 4490 1296 4492 
1300 4492 1304 4492 1308 4492 1311 4491 1315 4489 1319 4487 1323 4485 1326 4482 1330 4479 1334 4476 
1338 4472 1341 4469 1345 4465 1349 4461 1353 4457 1356 4453 1360 4449 1364 4445 1368 4441 1371 4437 
1375 4433 1379 4429 1383 4425 1386 4421 1390 4417 1394 4414 1398 4410 1401 4407 1405 4404 1409 4400 
1413 4397 1416 4394 1420 4391 1424 4388 1428 4385 1431 4383 1435 4380 1439 4378 1443 4375 1446 4373 
1450 4370 1454 4368 1458 4366 1461 4364 1465 4362 1469 4360 1473 4358 1476 4356 1480 4354 1484 4352 
1488 4351 1491 4349 1495 4347 1499 4346 1503 4344 1506 4343 1510 4341 1514 4340 1518 4338 1521 4337 
1525 4336 1529 4334 1533 4333 1536 4332 1540 4331 1544 4330 1548 4329 1551 4327 1555 4326 1559 4325 
1563 4324 1566 4323 1570 4322 1574 4322 1578 4321 1581 4320 1585 4319 1589 4318 1593 4317 1596 4317 
1600 4316 1604 4315 1608 4314 1611 4314 1615 4313 1619 4312 1623 4311 1626 4311 1630 4310 1634 4310 
1638 4309 1641 4308 1645 4308 1649 4307 1653 4307 1656 4306 1660 4306 1664 4305 1668 4305 1671 4304 
1675 4304 1679 4303 1683 4303 1686 4302 1690 4302 1694 4301 1698 4301 1701 4301 1705 4300 1709 4300 
1713 4299 1716 4299 1720 4299 1724 4298 1728 4298 1731 4298 1735 4297 1739 4297 1743 4297 1746 4296 
1748 4296 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
(-2) 215 4838 0  0.00 [215 4758 71 79] Show
%Latex:\myput{215}{1162}{4}{-2}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 104 4934 0  0.00 [104 4834 111 99] Show
%Latex:\myput{104}{1066}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[250 4725 250 4761 
] dogrey 
32 Setcolor
32 Setcolor
(-1) 590 4838 0  0.00 [590 4758 71 79] Show
%Latex:\myput{590}{1162}{4}{-1}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 479 4934 0  0.00 [479 4834 111 99] Show
%Latex:\myput{479}{1066}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[625 4725 625 4761 
] dogrey 
32 Setcolor
32 Setcolor
(0) 978 4838 0  0.00 [978 4758 44 79] Show
%Latex:\myput{978}{1162}{4}{0}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 867 4934 0  0.00 [867 4834 111 99] Show
%Latex:\myput{867}{1066}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[1000 4725 1000 4761 
] dogrey 
32 Setcolor
32 Setcolor
(1) 1353 4838 0  0.00 [1353 4758 44 79] Show
%Latex:\myput{1353}{1162}{4}{1}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 1242 4934 0  0.00 [1242 4834 111 99] Show
%Latex:\myput{1242}{1066}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[1375 4725 1375 4761 
] dogrey 
32 Setcolor
32 Setcolor
(2) 1728 4838 0  0.00 [1728 4758 44 79] Show
%Latex:\myput{1728}{1162}{4}{2}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 1617 4934 0  0.00 [1617 4834 111 99] Show
%Latex:\myput{1617}{1066}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[1750 4725 1750 4761 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[250 4725 250 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[363 4725 363 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[429 4725 429 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[476 4725 476 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[512 4725 512 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[542 4725 542 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[567 4725 567 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[589 4725 589 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[608 4725 608 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[625 4725 625 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[738 4725 738 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[804 4725 804 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[851 4725 851 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[887 4725 887 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[917 4725 917 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[942 4725 942 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[964 4725 964 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[983 4725 983 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[1000 4725 1000 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[1113 4725 1113 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[1179 4725 1179 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[1226 4725 1226 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[1262 4725 1262 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[1292 4725 1292 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[1317 4725 1317 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[1339 4725 1339 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[1358 4725 1358 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[1375 4725 1375 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[1488 4725 1488 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[1554 4725 1554 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[1601 4725 1601 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[1637 4725 1637 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[1667 4725 1667 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[1692 4725 1692 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[1714 4725 1714 4752 
] dogrey 
 (drawsegs) 4 [ 32]
[1733 4725 1733 4752 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-300) 26 4763 0  0.00 [26 4663 200 99] Show
%Latex:\myput{26}{1237}{5}{-300}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[250 4725 230 4725 
] dogrey 
32 Setcolor
32 Setcolor
(-250) 26 4579 0  0.00 [26 4479 200 99] Show
%Latex:\myput{26}{1421}{5}{-250}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[250 4541 230 4541 
] dogrey 
32 Setcolor
32 Setcolor
(-200) 26 4395 0  0.00 [26 4295 200 99] Show
%Latex:\myput{26}{1605}{5}{-200}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[250 4357 230 4357 
] dogrey 
32 Setcolor
32 Setcolor
(-150) 26 4211 0  0.00 [26 4111 200 99] Show
%Latex:\myput{26}{1789}{5}{-150}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[250 4173 230 4173 
] dogrey 
32 Setcolor
32 Setcolor
(-100) 26 4027 0  0.00 [26 3927 200 99] Show
%Latex:\myput{26}{1973}{5}{-100}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[250 3989 230 3989 
] dogrey 
32 Setcolor
32 Setcolor
(-50) 82 3844 0  0.00 [82 3744 144 99] Show
%Latex:\myput{82}{2156}{5}{-50}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[250 3806 230 3806 
] dogrey 
32 Setcolor
32 Setcolor
(0) 171 3660 0  0.00 [171 3560 55 99] Show
%Latex:\myput{171}{2340}{5}{0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[250 3622 230 3622 
] dogrey 
32 Setcolor
32 Setcolor
(50) 115 3476 0  0.00 [115 3376 111 99] Show
%Latex:\myput{115}{2524}{5}{50}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[250 3438 230 3438 
] dogrey 
32 Setcolor
32 Setcolor
(100) 60 3292 0  0.00 [60 3192 166 99] Show
%Latex:\myput{60}{2708}{5}{100}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[250 3254 230 3254 
] dogrey 
32 Setcolor
32 Setcolor
(150) 60 3108 0  0.00 [60 3008 166 99] Show
%Latex:\myput{60}{2892}{5}{150}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[250 3070 230 3070 
] dogrey 
32 Setcolor
32 Setcolor
(200) 60 2924 0  0.00 [60 2824 166 99] Show
%Latex:\myput{60}{3076}{5}{200}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[250 2886 230 2886 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[250 4725 235 4725 
] dogrey 
 (drawsegs) 4 [ 32]
[250 4633 235 4633 
] dogrey 
 (drawsegs) 4 [ 32]
[250 4541 235 4541 
] dogrey 
 (drawsegs) 4 [ 32]
[250 4449 235 4449 
] dogrey 
 (drawsegs) 4 [ 32]
[250 4357 235 4357 
] dogrey 
 (drawsegs) 4 [ 32]
[250 4265 235 4265 
] dogrey 
 (drawsegs) 4 [ 32]
[250 4173 235 4173 
] dogrey 
 (drawsegs) 4 [ 32]
[250 4081 235 4081 
] dogrey 
 (drawsegs) 4 [ 32]
[250 3989 235 3989 
] dogrey 
 (drawsegs) 4 [ 32]
[250 3897 235 3897 
] dogrey 
 (drawsegs) 4 [ 32]
[250 3806 235 3806 
] dogrey 
 (drawsegs) 4 [ 32]
[250 3714 235 3714 
] dogrey 
 (drawsegs) 4 [ 32]
[250 3622 235 3622 
] dogrey 
 (drawsegs) 4 [ 32]
[250 3530 235 3530 
] dogrey 
 (drawsegs) 4 [ 32]
[250 3438 235 3438 
] dogrey 
 (drawsegs) 4 [ 32]
[250 3346 235 3346 
] dogrey 
 (drawsegs) 4 [ 32]
[250 3254 235 3254 
] dogrey 
 (drawsegs) 4 [ 32]
[250 3162 235 3162 
] dogrey 
 (drawsegs) 4 [ 32]
[250 3070 235 3070 
] dogrey 
 (drawsegs) 4 [ 32]
[250 2978 235 2978 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[250 4725 1750 4725 
] dogrey 
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[250 4725 250 2886 
] dogrey 
32 Setcolor
 (drawbox) 4 [ 0]
[250 2886 1500 1839 
] dogrey 
32 Setcolor
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Phase ) 843 2760 0  0.00 [843 2660 311 99] Show
%Latex:\myput{843}{3240}{5}{Phase }
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
( Hz) 925 5057 0  0.00 [925 4957 150 99] Show
%Latex:\myput{925}{943}{5}{ Hz}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(degrees) -11 3964 0 270.00 [-11 3864 361 99] Show
%Latex:\myput{-11}{2036}{5}{degrees}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[250 5235 250 5685 1750 5685 1750 5235 250 5235 
] dogrey 
33 Setcolor
/absolu true def
32 Setcolor
[] 0 setdash
32 Setcolor
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
5 Thickness
[] 0 setdash
 (drawsegs) 4 [ 0]
[250 5370 370 5370 
] dogrey 
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(open loop) 400 5398 0  0.00 [400 5298 439 99] Show
%Latex:\myput{400}{602}{5}{open loop}
1 Setcolor
5 Thickness
[] 0 setdash
1 Setcolor
5 Thickness
[] 0 setdash
 (drawsegs) 4 [ 1]
[250 5595 370 5595 
] dogrey 
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(compensated open loop) 400 5623 0  0.00 [400 5523 1067 99] Show
%Latex:\myput{400}{377}{5}{compensated open loop}
2 Setcolor
5 Thickness
[] 0 setdash
2 Setcolor
5 Thickness
[] 0 setdash
 (drawsegs) 4 [ 2]
[250 5820 370 5820 
] dogrey 
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(compensated closed loop) 400 5848 0  0.00 [400 5748 1133 99] Show
%Latex:\myput{400}{152}{5}{compensated closed loop}
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
%Latex:\end{picture}
 showpage

 end saved restore 

